{"mappings":"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","sources":["src/js/api/moviesApiServiceClass.js","src/js/spinner.js","src/js/pagination.js","src/js/api/main-home-file.js","node_modules/debounce/index.js","src/js/searchFilmByKeyword/render_search_films.js","src/js/searchFilmByKeyword/search_films_by_keyword_input.js","src/js/searchFilmByKeyword/search_films_by_keyword_submit.js","src/js/pagination-query.js","src/js/searchFilmByKeyword/timeoutForBadRequest.js","src/js/api/loadModalCard.js","src/js/searchFilmByKeyword/fetch-trailer.js","src/js/searchFilmByKeyword/renderBadRequest.js","src/js/searchFilmByKeyword/render-trailer.js","src/js/movie-trailer.js","src/js/vendors/aos.js"],"sourcesContent":["import API_KEY from './constants/apiKeys';\nimport { BASE_TRENDING_MOVIES_URL } from './constants/baseUrls';\nimport { BASE_GENRE_URL } from './constants/baseUrls';\n\nexport default class MoviesApiService {\n  constructor() {\n    this.searchQuery = '';\n    this._page = 1;\n    // this.url = `${BASE_TRENDING_MOVIES_URL}trending/all/day?&api_key=${API_KEY}`;\n  }\n\n  // FETCHING FILMS FOR THE FIRST TIME\n  fetchTrendingMovies() {\n    const url = `${BASE_TRENDING_MOVIES_URL}trending/all/day?&api_key=${API_KEY}&page=${this._page}`;\n\n    return fetch(url).then(response => {\n      return response.json();\n    });\n  }\n\n  // FETCHING GENRES FOR THE FIRST TIME\n  fetchGenres() {\n    const url = `${BASE_GENRE_URL}&language=en-US&api_key=${API_KEY}`;\n    return fetch(url).then(response => {\n      return response.json();\n    });\n  }\n\n  // FETCHING FILMS USING FORM\n  fetchSearchingMovies() {\n    const url = `${BASE_TRENDING_MOVIES_URL}search/movie?api_key=${API_KEY}&page=${this._page}&query=${this.searchQuery}`;\n\n    return fetch(url).then(response => {\n      return response.json();\n    });\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  // incrementPage() {\n  //   this.page += 1;\n  // }\n\n  // decrementPage() {\n  //   this.page -= 1;\n  // }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  set page(newPage) {\n    this._page = newPage;\n  }\n}\n","import { refs } from './refs';\n\nexport default class Spinner {\n    constructor() {\n        this.refs = refs;\n    }\n  \n  //показать спиннер\n    show() {\n      this.refs.spinner.classList.remove('is-hidden');\n  };  \n  \n  //скрыть спиннер\n    hide() {\n      this.refs.spinner.classList.add('is-hidden'); \n  };\n}","import Pagination from 'tui-pagination';\nimport MoviesApiService from './api/moviesApiServiceClass';\nimport Spinner from './spinner'\nimport makingMarkup from './api/render-card-markup';\nimport { insertFilmsMarkupToHome } from './api/insertingIntoDifferentContainers';\nimport { refs } from './refs';\n\nconst moviesApiService = new MoviesApiService();\nconst spinner = new Spinner();\n\nexport function createPagination(total_results) {\n  const container = document.getElementById('pagination');\n  const options = {\n    totalItems: total_results,\n    itemsPerPage: 20,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: true,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n\n  const mediaQuery = window.matchMedia('(max-width: 768px)');\n  mediaQuery.addEventListener('change', handleMobileChange);\n  function handleMobileChange(event) {\n    // console.log('EVENT: ', event);\n    if (event.matches) {\n      // console.log('OPTIONS: ', options);\n      options.visiblePages = 3;\n    }\n  }\n  handleMobileChange(mediaQuery);\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('afterMove', event => {\n    refs.homeCardsContainer.innerHTML = '';\n\n    spinner.show();\n\n    moviesApiService.page = event.page;\n    moviesApiService\n      .fetchTrendingMovies()\n      .then(({ results }) => {\n        const markup = makingMarkup(results);\n\n        spinner.hide();\n        insertFilmsMarkupToHome(markup);\n        localStorage.setItem(`currentFilm`, JSON.stringify(results));\n      })\n      .catch(error => console.log(error));\n  });\n}\n","import MoviesApiService from './moviesApiServiceClass';\nimport Spinner from '../spinner';\nimport makingMarkup from './render-card-markup';\nimport { insertFilmsMarkupToHome } from './insertingIntoDifferentContainers';\nimport { refs } from '../refs';\nimport { createPagination } from '../pagination';\n\nconst moviesApiService = new MoviesApiService();\nconst spinner = new Spinner();\n\n// GETTING GENRES TO LOCALSTORAGE\n// DO NOT MOVE THIS FUNCTION!!!\nmoviesApiService\n  .fetchGenres()\n  .then(({ genres }) => {\n    for (const { id, name } of genres) {\n      localStorage.setItem(`genre_${id}`, name);\n    }\n  })\n  .catch(error => console.log(error));\n\n// RENDERING MARKUP USING GENRES FROM LOCALSTORAGE\nspinner.show();\nmoviesApiService\n  .fetchTrendingMovies()\n  .then(({ results, total_results }) => {\n    const markup = makingMarkup(results);\n\n    spinner.hide();\n    insertFilmsMarkupToHome(markup);\n    createPagination(total_results);\n    localStorage.setItem(`currentFilm`, JSON.stringify(results));\n  })\n  .catch(error => console.log(error));\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","import { refs } from './../refs';\n\n//* функція рендерить розмітку випадаючого меню\nexport default function renderMarkupSearchFilms(films) {\n  refs.filmsSearchList.innerHTML = '';\n  refs.filmsSearchList.classList.remove('search-form__list--bgc');\n\n  //* якщо запит не коректний\n  if(films.results.length === 0) {\n    const markup = '<p class=\"search-form--badrequest\">Search result not successful. Enter the correct movie name!</p>';\n    refs.filmsSearchList.innerHTML = markup;\n    return;\n  }; \n\n    //*рендер фільмів у випадаючому списку\n    const markup = films.results.slice(0,5).map(( { title, vote_average} ) => {\n      return `<li class=\"search-form__item\">${title} - ${vote_average}</li>`;\n    }).join('');\n    refs.filmsSearchList.classList.add('search-form__list--bgc');\n  \n\n  refs.filmsSearchList.insertAdjacentHTML(\"beforeend\", markup);\n};\n\n","import { debounce } from 'debounce';\nimport { refs } from './../refs';\n// import fetchFilms from './fetch_search_films';\nimport MoviesApiService from '../api/moviesApiServiceClass';\nimport renderMarkupSearchFilms from './render_search_films';\n\nconst moviesApiService = new MoviesApiService();\n\n// refs.formSearch.addEventListener(\n//   'input',\n//   debounce(onSearchByKeyword, refs.DEBOUNCE_DELAY)\n// );\n\n// * функція обробляє результат fetch та викликає на його основі рендеринг випадаючого меню\n// function onSearchByKeyword(e) {\n//   const filmName = e.target.value.trim();\n\n//   if (!filmName) {\n//     refs.filmsSearchList.innerHTML = '';\n//     refs.filmsSearchList.classList.remove('search-form__list--bgc');\n//     return;\n//   }\n\n//   try {\n//     moviesApiService.fetchSearchingMovies().then(films => {\n//       renderMarkupSearchFilms(films);\n//     });\n//   } catch (err) {\n//     err => console.log(err);\n//   }\n// }","import { refs } from './../refs';\n// import fetchFilms from './fetch_search_films';\nimport MoviesApiService from '../api/moviesApiServiceClass';\nimport Spinner from '../spinner';\nimport makingMarkup from '../api/render-card-markup';\nimport { insertFilmsMarkupToHome } from '../api/insertingIntoDifferentContainers';\nimport { createPagination } from '../pagination-query';\nimport timeoutForBadRequest from './timeoutForBadRequest';\n\n// import { BASE_POSTER_URL } from '../api/render-card-markup';\n\nconst movieApiServise = new MoviesApiService();\nconst spinner = new Spinner();\n\nrefs.formSearch.addEventListener('submit', onSearchFilmByKeyword);\n\n//* функція обробляє результат fetch та викликає на його основі рендеринг головної сторінки\nfunction onSearchFilmByKeyword(e) {\n  e.preventDefault();\n\n  const searchFilms = e.currentTarget.elements.searchInput.value.trim();\n  movieApiServise.query = searchFilms;\n\n  refs.homeCardsContainer.innerHTML = '';\n  spinner.show();\n  try {\n    movieApiServise\n      .fetchSearchingMovies()\n      .then(({ results, total_results }) => {\n        if (results.length === 0) {\n          timeoutForBadRequest();\n          return;\n        }\n\n        const searchingMarkup = makingMarkup(results);\n\n        spinner.hide();\n        insertFilmsMarkupToHome(searchingMarkup);\n        createPagination(total_results, searchFilms);\n        localStorage.setItem(`currentFilm`, JSON.stringify(results));\n      });\n  } catch (err) {\n    err => console.log(err);\n  }\n\n  refs.inputSearch.value = '';\n  refs.filmsSearchList.innerHTML = '';\n  refs.filmsSearchList.classList.remove('search-form__list--bgc');\n}\n","import Pagination from 'tui-pagination';\nimport MoviesApiService from './api/moviesApiServiceClass';\nimport Spinner from './spinner';\nimport makingMarkup from './api/render-card-markup';\nimport { insertFilmsMarkupToHome } from './api/insertingIntoDifferentContainers';\nimport { refs } from './refs';\n\nconst moviesApiService = new MoviesApiService();\nconst spinner = new Spinner();\n\nexport function createPagination(total_results, searchQuery) {\n  const container = document.getElementById('pagination');\n  const options = {\n    totalItems: total_results,\n    itemsPerPage: 20,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: true,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n\n  const mediaQuery = window.matchMedia('(max-width: 768px)');\n  mediaQuery.addEventListener('change', handleMobileChange);\n  function handleMobileChange(event) {\n    // console.log('EVENT: ', event);\n    if (event.matches) {\n      // console.log('OPTIONS: ', options);\n      options.visiblePages = 3;\n    }\n  }\n  handleMobileChange(mediaQuery);\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('afterMove', event => {\n    refs.homeCardsContainer.innerHTML = '';\n\n    spinner.show();\n    \n    moviesApiService.page = event.page;\n    moviesApiService.query = searchQuery;\n    moviesApiService\n      .fetchSearchingMovies()\n      .then(({ results }) => {\n        const markup = makingMarkup(results);\n\n        spinner.hide();\n        insertFilmsMarkupToHome(markup);\n        localStorage.setItem(`currentFilm`, JSON.stringify(results));\n      })\n      .catch(error => console.log(error));\n  });\n}\n","import { refs } from '../refs';\n\nexport default function timeoutForBadRequest() {\n  const markup =\n    '<p class=\"search-form--badrequest\">Search result not successful. Enter the correct movie name!</p>';\n    refs.filmsSearchList.innerHTML = markup;\n    const timer = setTimeout(() => refs.filmsSearchList.innerHTML = '', 2000)\n    return timer;\n};","import { gettingGenresListForModal } from './gettingGenresList';\nimport makingMarkup from '../api/render-card-markup';\n// import MoviesApiService from './moviesApiServiceClass';\nimport { refs } from '../refs';\nimport { insertModalMarkupHome } from './insertingIntoDifferentContainers';\nimport {\n  addWatchedLocalStorage,\n  addQueueLocalStorage,\n  deleteQueue,\n  deleteWatched,\n} from '../local_storage';\nimport { textModalBtn } from '../modal-btns';\n// const moviesApiService = new MoviesApiService();\n//* для відкриття трейлеру\nimport { onTrailerClickBtn } from '../movie-trailer';\n\nrefs.homeCardsContainer.addEventListener('click', clickOnMovie);\nrefs.closeModalBtn.addEventListener('click', onCloseModalBtnClick);\nrefs.modalCardBackdrop.addEventListener('click', onModalCardBackdropClick);\n\nfunction clickOnMovie(e) {\n  if (\n    e.target.nodeName !== 'IMG' &&\n    e.target.nodeName !== 'DIV' &&\n    e.target.nodeName !== 'B' &&\n    e.target.nodeName !== 'H2' &&\n    e.target.nodeName !== 'P'\n  ) {\n    return;\n  }\n\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', modalCloseByEsc);\n\n  const currentId = e.target.dataset.id;\n  const unParsedCurrentArrayFilms = localStorage.getItem('currentFilm');\n  const parsedCurrentArrayFilms = JSON.parse(unParsedCurrentArrayFilms);\n\n  // console.log(parsedCurrentArrayFilms.find(obj => obj.id == currentId));\n  let currentMovie = parsedCurrentArrayFilms.find(obj => obj.id == currentId);\n\n  const render = makingModalCardMarkup(currentMovie);\n  insertModalMarkupHome(render);\n  ///////////////////////////////////////////////////////////////////////////\n  //** Код для запису об'єктів в LOCAL STORAGE */\n  document.querySelector('#watched-btn').addEventListener('click', () => {\n    // -----------Видалення фільму з сторінки Home----------\n    //  Потрібно узгодити із local.storage.js!!!!!!!!!!!\n    // let arrayFilmsWatched = [];\n    // const w = localStorage.getItem('watched');\n    // if (w) {\n    //   arrayFilmsWatched = JSON.parse(w);\n    // }\n\n    // // Перевірка на наявність об'єкта в масиві фільмів \"WATCHED\"\n    // const isAddedFilm = arrayFilmsWatched.find(arr => arr.id == currentId);\n    // isAddedFilm\n    //   ? deleteWatched(currentMovie)\n    //   : addWatchedLocalStorage(currentMovie);\n    // ----------------------------------\n    if (\n      document.querySelector('#watched-btn').textContent ===\n      'REMOVE FROM WATCHED'\n    ) {\n      document.querySelector('#watched-btn').textContent = 'ADD TO WATCHED';\n    }\n    addWatchedLocalStorage(\n      currentMovie,\n      document.querySelector('#watched-btn')\n    );\n    // textModalBtn(currentId);\n  });\n\n  document.querySelector('#queue-btn').addEventListener('click', () => {\n    // ---------------Видалення фільму з сторінки Home----------\n    // let arrayFilmsQueue = [];\n    // const q = localStorage.getItem('queue');\n    // if (q) {\n    //   arrayFilmsQueue = JSON.parse(q);\n    // }\n\n    // // Перевірка на наявність об'єкта в масиві фільмів \"QUEUE\"\n    // const isAddedFilm = arrayFilmsQueue.find(arr => arr.id == currentId);\n    // isAddedFilm\n    //   ? deleteQueue(currentMovie)\n    //   : addQueueLocalStorage(currentMovie);\n    // -------------------------------------------------\n    if (\n      document.querySelector('#queue-btn').textContent === 'REMOVE FROM QUEUE'\n    ) {\n      document.querySelector('#queue-btn').textContent = 'ADD TO QUEUE';\n    }\n    addQueueLocalStorage(currentMovie, document.querySelector('#queue-btn'));\n    // textModalBtn(currentId);\n  });\n  /////////////////////////////////////////////////////////////////////////////\n\n  //* слухач на відкриття трейлеру\n  const btnTrailer = document.querySelector('.movie__btn-trailer');\n  btnTrailer.addEventListener('click', onTrailerClickBtn(currentId));\n\n  // textModalBtn(currentId);\n}\n\nfunction onCloseModalBtnClick() {\n  window.removeEventListener('keydown', modalCloseByEsc);\n  document.body.classList.remove('show-modal');\n  refs.modalCardContainer.innerHTML = '';\n}\n\nfunction modalCloseByEsc(e) {\n  if (e.code === 'Escape') {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction onModalCardBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction makingModalCardMarkup(obj) {\n  const markup = `<div class=\"movie__container--left-side\">              \n                  <img class=\"movie__image\" src=\"https://www.themoviedb.org/t/p/w500${\n                    obj.poster_path ||\n                    `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`\n                  }\"\n                    alt=\"${obj.title || obj.name}\" />\n                    <button type=\"button\" class=\"movie__btn-trailer\">\n                        <svg width='120' height='80' class='youtube-icon' viewBox='0 -77 512.00213 512'>\n                            <path\n                                d='m501.453125 56.09375c-5.902344-21.933594-23.195313-39.222656-45.125-45.128906-40.066406-10.964844-200.332031-10.964844-200.332031-10.964844s-160.261719 0-200.328125 10.546875c-21.507813 5.902344-39.222657 23.617187-45.125 45.546875-10.542969 40.0625-10.542969 123.148438-10.542969 123.148438s0 83.503906 10.542969 123.148437c5.90625 21.929687 23.195312 39.222656 45.128906 45.128906 40.484375 10.964844 200.328125 10.964844 200.328125 10.964844s160.261719 0 200.328125-10.546875c21.933594-5.902344 39.222656-23.195312 45.128906-45.125 10.542969-40.066406 10.542969-123.148438 10.542969-123.148438s.421875-83.507812-10.546875-123.570312zm0 0'\n                                fill='#f00'></path>\n                            <path d='m204.96875 256 133.269531-76.757812-133.269531-76.757813zm0 0' fill='#fff'></path>\n                        </svg>\n                    </button>                \n            </div>\n            <div class=\"movie__container--rigth-side\">\n                <h2 class=\"movie__title\">${obj.title || obj.name}</h2>\n                <table class=\"movie__info\">\n                    <tbody>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Vote / Votes</td>\n                            <td class=\"movie__info-rating\">\n                                <span class=\"movie__info-rating-value movie__info-rating--accent\">${\n                                  obj.vote_average\n                                }</span>\n                                <span class=\"movie__info-rating-slash\">/</span>\n                                <span class=\"movie__info-rating-value\">${\n                                  obj.vote_count\n                                }</span>\n                            </td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Popularity</td>\n                            <td class=\"movie__info-numbers\">${\n                              obj.popularity\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Original Title</td>\n                            <td class=\"movie__info-value\">${\n                              obj.original_title || obj.original_name\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows movie__info-rows--last\">\n                            <td class=\"movie__info-name\">Genre</td>\n                            <td class=\"movie__info-value\">${\n                              gettingGenresListForModal(obj.genre_ids) ||\n                              'Genre not defined'\n                            }</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h2 class=\"movie__about-title\">About</h2>\n                <p class=\"movie__about-text\">\n                    ${obj.overview || 'No text'}\n                </p>\n                <div class=\"movie__btn-container\">\n                   \n                    <button type=\"submit\" id=\"watched-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn--accent\">ADD TO WATCHED\n                        </button>\n                    <button type=\"submit\" id=\"queue-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn-queue\">ADD TO QUEUE\n                        </button>\n                </div>\n            </div>\n        </div>`;\n  return markup;\n}\n\nexport { makingModalCardMarkup };\n","import renderBadRequest from './renderBadRequest';\n\nexport default async function fetchFilms(movie_id) {\n  const API_KEY = 'b36f6ce5e4cba76038e6a3b1e091122a';\n  const linkForSearchById = `\n  https://api.themoviedb.org/3/movie/${movie_id}/videos?api_key=${API_KEY}&language=en-US`;\n  const response = await fetch(linkForSearchById);\n  if (!response.ok) {\n    renderBadRequest();\n    throw new Error(response.status);\n  }\n  const films = await response.json();\n  return films;\n};\n","export default function renderBadRequest(){\n  const btnTrailer = document.querySelector('.movie__btn-trailer');\n  const markup = `<h2 class=\"movie__btn-trailer--bad\">Немає трейлера до цього фільму</h2>`;\n    btnTrailer.insertAdjacentHTML(\"beforeend\", markup);\n};","export default function renderTrailer(key) {\n  const btnTrailer = document.querySelector('.movie__btn-trailer');\n  if(!key) {\n    const markup = `<h2>Немає трейлера до цього фільму</h2>`;\n    btnTrailer.insertAdjacentHTML(\"beforeend\", markup);\n    return;\n  };\n\n  const markup = `<iframe id=\"player\" type=\"text/html\" width=\"250\" height=\"370\"\n  src=\"http://www.youtube.com/embed/${key}?enablejsapi=1&origin=http://example.com\"\n  frameborder=\"0\"></iframe>`;\n\n  \n  btnTrailer.insertAdjacentHTML(\"beforeend\", markup);\n};","import fetchFilms from \"./searchFilmByKeyword/fetch-trailer\";\nimport renderTrailer from './searchFilmByKeyword/render-trailer';\n\nfunction onTrailerClickBtn(currentId) {\n  try {\n      fetchFilms(currentId).then(films => {\n        renderTrailer(films.results[0].key);\n    });\n  } catch (err) {\n    err => console.log(err);\n  }\n};\n\nexport { onTrailerClickBtn };","AOS.init();\n"],"names":["$bbe3b1141b280cb0$export$2e2bcd8739ae039","fetchTrendingMovies","url","this","_page","fetch","then","response","json","fetchGenres","fetchSearchingMovies","searchQuery","query","newQuery","resetPage","page","newPage","constructor","$krGWQ","parcelRequire","$00cfbbdd8a53f936$export$2e2bcd8739ae039","show","refs","spinner","classList","remove","hide","add","$fb9GJ","$1bab9c519cfa82bc$var$moviesApiService","$1bab9c519cfa82bc$var$spinner","$1bab9c519cfa82bc$export$7f3155e3cda021fd","total_results","container","document","getElementById","options","totalItems","itemsPerPage","visiblePages","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","mediaQuery","window","matchMedia","handleMobileChange","event","matches","addEventListener","$parcel$interopDefault","on","homeCardsContainer","innerHTML","results","markup","$jU4ZD","default","$7x8k5","insertFilmsMarkupToHome","localStorage","setItem","JSON","stringify","catch","error","console","log","$b3b1805a313b9b92$var$moviesApiService","$b3b1805a313b9b92$var$spinner","genres","id","name","$815ad92c071f8c63$var$debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","arguments","callNow","clear","clearTimeout","flush","debounce","$3ebd676ebcadcb38$var$moviesApiService","$3ebd676ebcadcb38$var$spinner","$3ebd676ebcadcb38$export$7f3155e3cda021fd","$f6771c8a34c594a8$export$2e2bcd8739ae039","filmsSearchList","$1d1cafd867145159$var$movieApiServise","$1d1cafd867145159$var$spinner","formSearch","e","preventDefault","searchFilms","currentTarget","elements","searchInput","value","trim","length","searchingMarkup","err1","inputSearch","$1drNe","async","$8c35722e01f1a6ee$export$2e2bcd8739ae039","movie_id","linkForSearchById","ok","querySelector","insertAdjacentHTML","Error","status","$48fb0091fba10cd0$export$2e2bcd8739ae039","key","btnTrailer","$950e19ee2d8c810f$export$2b4dbe51017feffa","currentId","films","$cf1697a32acb672b$var$onCloseModalBtnClick","removeEventListener","$cf1697a32acb672b$var$modalCloseByEsc","body","modalCardContainer","code","target","nodeName","dataset","unParsedCurrentArrayFilms","getItem","currentMovie","parse","find","obj","render","poster_path","title","vote_average","vote_count","popularity","original_title","original_name","gettingGenresListForModal","genre_ids","overview","insertModalMarkupHome","textContent","$fnyLm","addWatchedLocalStorage","addQueueLocalStorage","closeModalBtn","modalCardBackdrop","AOS","init"],"version":3,"file":"index.60507a4c.js.map"}