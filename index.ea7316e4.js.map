{"mappings":"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","sources":["src/js/api/render-card-markup.js","src/js/api/gettingGenresList.js","src/js/refs.js","src/js/api/insertingIntoDifferentContainers.js","src/js/local_storage.js","src/js/scroll-up-btn.js"],"sourcesContent":["import { gettingGenresListForCard } from './gettingGenresList';\nimport { refs } from '../refs';\n\nconst BASE_POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport default function makingMarkup(results) {\n  const markup = results\n    .map(\n      ({\n        title,\n        name,\n        poster_path,\n        genre_ids,\n        release_date,\n        first_air_date,\n        vote_average,\n        id,\n      }) => {\n        let imagePath = ``;\n        poster_path === null\n          ? (imagePath = `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`)\n          : (imagePath = `${BASE_POSTER_URL}/${BASE_POSTER_URL}/${poster_path}`);\n\n        return `<li data-aos=\"fade-up\"\n    data-aos-offset=\"200\"\n    data-aos-delay=\"100\"\n    data-aos-duration=\"1000\"\n    data-aos-easing=\"ease-in-out\"\n     class=\"movie-card\">\n        <div class=\"movie-card__link\" href=\"#\">\n        <p class=\"movie-card__raiting\">\n                        <b>${setReleaseVote(vote_average)}</b>\n                    </p>\n                <img data-id=\"${id}\" width=\"280\" height=\"402\" class=\"movie-card__img\" src=\"${imagePath}\" alt=\"${\n          title || name\n        }\" loading=\"lazy\"/>\n    <div data-aos=\"fade-right\"\n    data-aos-delay=\"50\"\n    data-aos-duration=\"1000\"\n    data-aos-easing=\"ease-in-out\"\n    data-aos-once=\"false\"\n     class=\"movie-card__cont\">\n                  <h2 class=\"movie-card__title\">${title || name}</h2>\n                    <p class=\"movie-card__info\">\n                        <b>${\n                          gettingGenresListForCard(genre_ids) ||\n                          `Genre not defined`\n                        } | </b>\n                    </p>\n                    <p class=\"movie-card__info\">\n                        <b>${\n                          setReleaseDate(release_date, first_air_date) ||\n                          'No data'\n                        }</b>\n                    </p>\n                       \n                    </div>\n                    </div>\n            </li>`;\n      }\n    )\n    .join('');\n  return markup;\n}\n\nfunction setReleaseDate(releaseDate, firstAirDate) {\n  if (!releaseDate) {\n    return firstAirDate.slice(0, 4);\n  }\n  return releaseDate.slice(0, 4);\n}\n\nfunction setReleaseVote(vote) {\n  if (!vote) {\n    return 'No vote';\n  }\n  return vote.toFixed(1);\n}\n","export function gettingGenresListForModal(array) {\n  let genre_names = '';\n\n  for (const id of array) {\n    const genre_name = localStorage.getItem(`genre_${id}`);\n    if (!genre_name) {\n      continue;\n    }\n    if (genre_names) {\n      genre_names += ', ';\n    }\n    genre_names += genre_name;\n  }\n  return genre_names;\n}\n\nexport function gettingGenresListForCard(array) {\n  let genre_names = '';\n\n  if (array.length <= 2) {\n    for (const id of array) {\n      let genre_name = localStorage.getItem(`genre_${id}`);\n\n      if (!genre_name) {\n        continue;\n      }\n\n      if (genre_names) {\n        genre_names += ', ';\n      }\n\n      genre_names += genre_name;\n    }\n    return genre_names;\n  }\n\n  if (array.length >= 3) {\n    let counter = 0;\n\n    for (const id of array) {\n      let genre_name = localStorage.getItem(`genre_${id}`);\n\n      if (!genre_name) {\n        continue;\n      }\n      counter += 1;\n      if (counter === 3) {\n        genre_names += ', Other';\n        break;\n      }\n      if (genre_names) {\n        genre_names += ', ';\n      }\n\n      genre_names += genre_name;\n    }\n    return genre_names;\n  }\n}\n","export const refs = {\n  // containers\n  // homeCardsContainer: document.querySelector('.cards__list--home'),\n  homeCardsContainer: document.querySelector('.cards__list--home'),\n  libraryCardsContainer: document.querySelector('.cards__list--library'),\n\n  // buttons\n  btnWatched: document.querySelector('#watched'),\n  btnQueue: document.querySelector('#queue'),\n\n  btnAddToWatched: document.querySelector('.modal_watched'),\n  btnAddToQueue: document.querySelector('.modal_queue'),\n\n  closeModalBtn: document.querySelector('.modal-close-button'),\n\n  // search\n  DEBOUNCE_DELAY: 300,\n  formSearch: document.querySelector('.search-form'),\n  filmsSearchList: document.querySelector('.search-form__list'),\n\n  //modal-card\n  modalCardBackdrop: document.querySelector('.modal-card-backdrop'),\n  modalCardContainer: document.querySelector('.movie__container'),\n\n  inputSearch: document.querySelector('.search-form__input'),\n};\n","import { refs } from '../refs';\n\n// FUNCTION FOR INSERTING MARKUP TO HOME-CARDS-CONTAINER\nexport const insertFilmsMarkupToHome = filmsMarkup =>\n  refs.homeCardsContainer.insertAdjacentHTML('beforeend', filmsMarkup);\n\n// FUNCTION FOR INSERTING MARKUP TO LIBRARY-CARDS-CONTAINER\nexport const insertFilmsMarkupToLibrary = filmsMarkup =>\n  refs.libraryCardsContainer.insertAdjacentHTML('beforeend', filmsMarkup);\n","import { refs } from './refs';\nimport makingMarkup from './api/render-card-markup';\nimport { insertFilmsMarkupToLibrary } from './api/insertingIntoDifferentContainers';\n\nexport function addWatchedLocalStorage(obj) {\n  let arrayFilmsWatched = [];\n  const w = localStorage.getItem('watched');\n  if (w) {\n    arrayFilmsWatched = JSON.parse(w);\n  }\n\n  // Фільтрація раніше доданих фільмів\n  const currentId = obj.id;\n  if (arrayFilmsWatched.find(el => el.id === currentId)) {\n    return;\n  }\n\n  arrayFilmsWatched.push(obj);\n  localStorage.setItem('watched', JSON.stringify(arrayFilmsWatched));\n  return arrayFilmsWatched;\n}\n\nexport function addQueueLocalStorage(obj) {\n  let arrayFilmsQueue = [];\n  const q = localStorage.getItem('queue');\n  if (q) {\n    arrayFilmsQueue = JSON.parse(q);\n  }\n\n  // Фільтрація раніше доданих фільмів\n  const currentId = obj.id;\n  if (arrayFilmsQueue.find(el => el.id === currentId)) {\n    return;\n  }\n\n  arrayFilmsQueue.push(obj);\n  localStorage.setItem('queue', JSON.stringify(arrayFilmsQueue));\n  return arrayFilmsQueue;\n}\n\nexport function getWatchedFilms() {\n  clearLibrary();\n  try {\n    const saveFilms = localStorage.getItem('watched');\n    //Якщо в localStorage немає ключа watched - показуємо заглушку\n    if (saveFilms === null) {\n      addScreenSaver();\n      return;\n    }\n\n    const parsedFilms = JSON.parse(saveFilms);\n    if (parsedFilms.length === 0) {\n      addScreenSaver();\n      return;\n    }\n\n    const renderWatched = makingMarkup(parsedFilms);\n    insertFilmsMarkupToLibrary(renderWatched);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getQueueFilms() {\n  clearLibrary();\n  try {\n    const saveFilms = localStorage.getItem('queue');\n    //Якщо в localStorage немає ключа queue - показуємо заглушку\n    if (saveFilms === null) {\n      addScreenSaver();\n      return;\n    }\n\n    const parsedFilms = JSON.parse(saveFilms);\n    // Перевірка на порожній масив в localStorage\n    if (parsedFilms.length === 0) {\n      addScreenSaver();\n      return;\n    }\n\n    const renderQueue = makingMarkup(parsedFilms);\n    insertFilmsMarkupToLibrary(renderQueue);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//   Фунуція для очищення попередніх результатів рендеру\nfunction clearLibrary() {\n  refs.libraryCardsContainer.innerHTML = '';\n}\n\n// Функція для відмальовки \"заглушки\" (якщо localStorage порожній)\nfunction addScreenSaver() {\n  refs.libraryCardsContainer.innerHTML = `<strong \n    style=\"\n    font-size: 18px;\n    color: var(--secondary-text-cl);\">\n    Sorry, no information has been added\n    </strong>`;\n}\n","const scrollBtnEl = document.getElementById('scroll-up');\n\nscrollBtnEl.addEventListener('click', onScrollUp);\n\nfunction onScrollUp() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n}\n\nwindow.addEventListener('scroll', function () {\n  scrollBtnEl.hidden = pageYOffset < document.documentElement.clientHeight;\n});\n"],"names":["$iSn7Y","parcelRequire","$24513894e16dca13$var$BASE_POSTER_URL","$24513894e16dca13$export$2e2bcd8739ae039","results","map","param","releaseDate","firstAirDate","vote","title","name","poster_path","genre_ids","release_date","first_air_date","vote_average","id","imagePath","concat","toFixed","gettingGenresListForCard","slice","join","$dbdf35d290f0d4ec$export$eebf935b9ee3c024","array","genre_names","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","genre_name","localStorage","getItem","err","return","$dbdf35d290f0d4ec$export$a0fef2a13268cf9e","length","counter","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","id1","genre_name1","$37e33676934ad046$export$21666b427502ea6d","homeCardsContainer","document","querySelector","libraryCardsContainer","btnWatched","btnQueue","btnAddToWatched","btnAddToQueue","closeModalBtn","DEBOUNCE_DELAY","formSearch","filmsSearchList","modalCardBackdrop","modalCardContainer","inputSearch","$4Nugj","$deb9770d47bfca92$export$c6520a5cb8c6a471","filmsMarkup","refs","insertAdjacentHTML","$deb9770d47bfca92$export$6f52a622547ea617","$8ddeb65522df330d$export$8095c7988189260c","obj","arrayFilmsWatched","w","JSON","parse","currentId","find","el","push","setItem","stringify","$8ddeb65522df330d$export$367ebfca633f9a1f","arrayFilmsQueue","q","$8ddeb65522df330d$export$c157f2a2227abe3b","$8ddeb65522df330d$var$clearLibrary","saveFilms","$8ddeb65522df330d$var$addScreenSaver","parsedFilms","renderWatched","$37jAB","default","$j7yxE","insertFilmsMarkupToLibrary","error","console","log","$8ddeb65522df330d$export$c2f4e899f5757252","renderQueue","innerHTML","$4e3128c27d8675db$var$scrollBtnEl","getElementById","addEventListener","window","scrollTo","top","behavior","hidden","pageYOffset","documentElement","clientHeight"],"version":3,"file":"index.ea7316e4.js.map"}