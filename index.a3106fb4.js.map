{"mappings":"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","sources":["src/js/api/render-card-markup.js","src/js/api/gettingGenresList.js","src/js/refs.js","src/js/api/insertingIntoDifferentContainers.js","src/js/modal-btns.js","src/js/api/loadModalCard.js","src/js/local_storage.js","src/js/library-header-btns.js"],"sourcesContent":["import { gettingGenresListForCard } from './gettingGenresList';\nimport { refs } from '../refs';\n\nconst BASE_POSTER_URL = `https://image.tmdb.org/t/p/w500`;\n\nexport default function makingMarkup(results) {\n  const markup = results\n    .map(\n      ({\n        title,\n        name,\n        poster_path,\n        genre_ids,\n        release_date,\n        first_air_date,\n        vote_average,\n        id,\n      }) => {\n        let imagePath = ``;\n        poster_path === null\n          ? (imagePath = `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`)\n          : (imagePath = `${BASE_POSTER_URL}/${BASE_POSTER_URL}/${poster_path}`);\n\n        return `<li data-aos=\"fade-up\"\n    data-aos-offset=\"200\"\n    data-aos-delay=\"100\"\n    data-aos-duration=\"1000\"\n    data-aos-easing=\"ease-in-out\"\n     class=\"movie-card\">\n        <div class=\"movie-card__link\" href=\"#\">\n        <p class=\"movie-card__raiting\">\n                        <b>${setReleaseVote(vote_average)}</b>\n                    </p>\n                <img data-id=\"${id}\" width=\"280\" height=\"402\" class=\"movie-card__img\" src=\"${imagePath}\" alt=\"${\n          title || name\n        }\" loading=\"lazy\"/>\n    <div data-aos=\"fade-right\"\n    data-aos-delay=\"50\"\n    data-aos-duration=\"1000\"\n    data-aos-easing=\"ease-in-out\"\n    data-aos-once=\"false\"\n     class=\"movie-card__cont\">\n                  <h2 class=\"movie-card__title\">${title || name}</h2>\n                    <p class=\"movie-card__info\">\n                        <b>${\n                          gettingGenresListForCard(genre_ids) ||\n                          `Genre not defined`\n                        } | </b>\n                    </p>\n                    <p class=\"movie-card__info\">\n                        <b>${\n                          setReleaseDate(release_date) ||\n                          setReleaseDate(first_air_date)\n                        }</b>\n                    </p>\n                       \n                    </div>\n                    </div>\n            </li>`;\n      }\n    )\n    .join('');\n  return markup;\n}\n\nfunction setReleaseDate(year) {\n  if (!year) {\n    return 'No data';\n  }\n  return year.slice(0, 4);\n}\n\nfunction setReleaseVote(vote) {\n  if (!vote) {\n    return 'No vote';\n  }\n  return vote.toFixed(1);\n}\n","export function gettingGenresListForModal(array) {\n  let genre_names = '';\n\n  for (const id of array) {\n    const genre_name = localStorage.getItem(`genre_${id}`);\n    if (!genre_name) {\n      continue;\n    }\n    if (genre_names) {\n      genre_names += ', ';\n    }\n    genre_names += genre_name;\n  }\n  return genre_names;\n}\n\nexport function gettingGenresListForCard(array) {\n  let genre_names = '';\n\n  if (array.length <= 2) {\n    for (const id of array) {\n      let genre_name = localStorage.getItem(`genre_${id}`);\n\n      if (!genre_name) {\n        continue;\n      }\n\n      if (genre_names) {\n        genre_names += ', ';\n      }\n\n      genre_names += genre_name;\n    }\n    return genre_names;\n  }\n\n  if (array.length >= 3) {\n    let counter = 0;\n\n    for (const id of array) {\n      let genre_name = localStorage.getItem(`genre_${id}`);\n\n      if (!genre_name) {\n        continue;\n      }\n      counter += 1;\n      if (counter === 3) {\n        genre_names += ', Other';\n        break;\n      }\n      if (genre_names) {\n        genre_names += ', ';\n      }\n\n      genre_names += genre_name;\n    }\n    return genre_names;\n  }\n}\n","export const refs = {\n  // containers\n  // homeCardsContainer: document.querySelector('.cards__list--home'),\n  homeCardsContainer: document.querySelector('.cards__list'),\n  // libraryCardsContainer: document.querySelector('.cards__list--library'),\n\n  // buttons\n  // btnWatched: document.querySelector('#watched'),\n  // btnQueue: document.querySelector('#queue'),\n\n  btnAddToWatched: document.querySelector('.modal_watched'),\n  btnAddToQueue: document.querySelector('.modal_queue'),\n\n  closeModalBtn: document.querySelector('.modal-close-button'),\n\n  // search\n  DEBOUNCE_DELAY: 300,\n  formSearch: document.querySelector('.search-form'),\n  filmsSearchList: document.querySelector('.search-form__list'),\n\n  //modal-card\n  modalCardBackdrop: document.querySelector('.modal-card-backdrop'),\n  modalCardContainer: document.querySelector('.movie__container'),\n\n  inputSearch: document.querySelector('.search-form__input'),\n};\n","import { refs } from '../refs';\n\n// FUNCTION FOR INSERTING MARKUP TO HOME-CARDS-CONTAINER\nexport const insertFilmsMarkupToHome = filmsMarkup =>\n  refs.homeCardsContainer.insertAdjacentHTML('beforeend', filmsMarkup);\n\n// FUNCTION FOR INSERTING MARKUP TO LIBRARY-CARDS-CONTAINER\nexport const insertFilmsMarkupToLibrary = filmsMarkup =>\n  refs.libraryCardsContainer.insertAdjacentHTML('beforeend', filmsMarkup);\n","import { refs } from './refs';\n\n// const modalWatched = document.querySelector('.modal_watched');\n// const modalQueue = document.querySelector('.modal_queue');\n\n// refs.btnAddToWatched.addEventListener('click', changeText);\n// refs.btnAddToQueue.addEventListener('click', changeText);\n\n// modalWatched.addEventListener('click', changeText);\n// modalQueue.addEventListener('click', changeText);\n\nfunction changeText() {\n  console.log('Click!!!!!!!!!!');\n}\n\n// const textWatched = [watched.textContent, 'REMOVE'];\n// const textQueue = [queue.textContent, 'REMOVE'];\n\n// function changeTextWatched({ target }) {\n//   target.state = +!target.state;\n//   target.textContent = textWatched[target.state];\n// }\n\n// function changeTextQueue({ target }) {\n//   target.state = +!target.state;\n//   target.textContent = textQueue[target.state];\n// }\n","import { gettingGenresListForModal } from './gettingGenresList';\nimport makingMarkup from '../api/render-card-markup';\n// import MoviesApiService from './moviesApiServiceClass';\nimport { refs } from '../refs';\nimport {\n  insertFilmsMarkupToHome,\n  insertFilmsMarkupToLibrary,\n} from '../api/insertingIntoDifferentContainers';\nimport { addWatchedLocalStorage, addQueueLocalStorage } from '../local_storage';\n\n// const moviesApiService = new MoviesApiService();\n\nrefs.homeCardsContainer.addEventListener('click', clickOnMovie);\nrefs.closeModalBtn.addEventListener('click', onCloseModalBtnClick);\nrefs.modalCardBackdrop.addEventListener('click', onModalCardBackdropClick);\n\nfunction clickOnMovie(e) {\n  if (e.target.nodeName !== 'IMG' && e.target.nodeName !== 'B') {\n    return;\n  }\n\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', modalCloseByEsc);\n\n  const currentId = e.target.dataset.id;\n  const unParsedCurrentArrayFilms = localStorage.getItem('currentFilm');\n  const parsedCurrentArrayFilms = JSON.parse(unParsedCurrentArrayFilms);\n\n  // console.log(parsedCurrentArrayFilms.find(obj => obj.id == currentId));\n  let currentMovie = parsedCurrentArrayFilms.find(obj => obj.id == currentId);\n\n  makingModalCardMarkup(currentMovie);\n\n  //////////////////////////////////////////////////////////////////\n  //** Код для запису об'єктів в LOCAL STORAGE */\n\n  document.querySelector('#watched-btn').addEventListener('click', () => {\n    // debugger;\n    // ФУНКЦИЯ addWatchedLocalStorage импортирована из local_storage.js\n    let array = addWatchedLocalStorage(currentMovie);\n    // console.log(array);\n    let markup = makingMarkup(array);\n    console.log(markup);\n\n    // НЕ РАБОТАЕТ ВСТАВКА 👇🏻!!!!!!!!!!!!!!!\n    refs.homeCardsContainer.insertAdjacentHTML('beforeend', markup);\n    // ВТОРОЙ ВАРИАНТ ВСТАВКИ ТОЖЕ НЕ РАБОТАЕТ 👇🏻!!!!!!!!!!!!!!!\n    // insertFilmsMarkupToHome(markup);\n  });\n\n  // document.querySelector('#queue-btn').addEventListener('click', () => {\n  //   return addQueueLocalStorage(currentMovie);\n  // });\n  /////////////////////////////////////////////////////////////////////\n}\n\nfunction onCloseModalBtnClick() {\n  window.removeEventListener('keydown', modalCloseByEsc);\n  document.body.classList.remove('show-modal');\n  refs.modalCardContainer.innerHTML = '';\n}\n\nfunction modalCloseByEsc(e) {\n  if (e.code === 'Escape') {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction onModalCardBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction makingModalCardMarkup(obj) {\n  const markup = `<div class=\"movie__container--left-side\">\n                <img class=\"movie__image\" src=\"https://www.themoviedb.org/t/p/w500${\n                  obj.poster_path\n                }\"\n                    alt=\"${obj.title || obj.name}\" />\n            </div>\n            <div class=\"movie__container--rigth-side\">\n                <h2 class=\"movie__title\">${obj.title || obj.name}</h2>\n                <table class=\"movie__info\">\n                    <tbody>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Vote / Votes</td>\n                            <td class=\"movie__info-rating\">\n                                <span class=\"movie__info-rating-value movie__info-rating--accent\">${\n                                  obj.vote_average\n                                }</span>\n                                <span class=\"movie__info-rating-slash\">/</span>\n                                <span class=\"movie__info-rating-value\">${\n                                  obj.vote_count\n                                }</span>\n                            </td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Popularity</td>\n                            <td class=\"movie__info-numbers\">${\n                              obj.popularity\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Original Title</td>\n                            <td class=\"movie__info-value\">${\n                              obj.original_title || obj.original_name\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows movie__info-rows--last\">\n                            <td class=\"movie__info-name\">Genre</td>\n                            <td class=\"movie__info-value\">${\n                              gettingGenresListForModal(obj.genre_ids) ||\n                              'Genre not defined'\n                            }</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h2 class=\"movie__about-title\">About</h2>\n                <p class=\"movie__about-text\">\n                    ${obj.overview}\n                </p>\n                <div class=\"movie__btn-container\">\n                    <button type=\"button\" class=\"movie__btn btn btn-trailer\">\n                        <svg width='20' height='20' class='youtube-icon' viewBox='0 -77 512.00213 512'>\n                            <path\n                                d='m501.453125 56.09375c-5.902344-21.933594-23.195313-39.222656-45.125-45.128906-40.066406-10.964844-200.332031-10.964844-200.332031-10.964844s-160.261719 0-200.328125 10.546875c-21.507813 5.902344-39.222657 23.617187-45.125 45.546875-10.542969 40.0625-10.542969 123.148438-10.542969 123.148438s0 83.503906 10.542969 123.148437c5.90625 21.929687 23.195312 39.222656 45.128906 45.128906 40.484375 10.964844 200.328125 10.964844 200.328125 10.964844s160.261719 0 200.328125-10.546875c21.933594-5.902344 39.222656-23.195312 45.128906-45.125 10.542969-40.066406 10.542969-123.148438 10.542969-123.148438s.421875-83.507812-10.546875-123.570312zm0 0'\n                                fill='#f00'></path>\n                            <path d='m204.96875 256 133.269531-76.757812-133.269531-76.757813zm0 0' fill='#fff'></path>\n                        </svg>\n                        Watch trailer\n                    </button>\n                    <button type=\"submit\" id=\"watched-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn--accent\">add\n                        to Watched</button>\n                    <button type=\"submit\" id=\"queue-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn-queue\">add to\n                        queue</button>\n                </div>\n            </div>\n        </div>`;\n  refs.modalCardContainer.insertAdjacentHTML('beforeend', markup);\n}\n","import { refs } from './refs';\nimport makingMarkup from './api/render-card-markup';\nimport {\n  insertFilmsMarkupToHome,\n  insertFilmsMarkupToLibrary,\n} from './api/insertingIntoDifferentContainers';\n\nconst arrayFilmsQueue = [];\n\nexport function addWatchedLocalStorage(obj) {\n  let arrayFilmsWatched = [];\n  const w = localStorage.getItem('watched');\n  if (w) {\n    arrayFilmsWatched = JSON.parse(w);\n  }\n\n  arrayFilmsWatched.push(obj);\n  localStorage.setItem('watched', JSON.stringify(arrayFilmsWatched));\n  return arrayFilmsWatched;\n}\n\nexport function addQueueLocalStorage(obj) {\n  arrayFilmsQueue.push(obj);\n\n  localStorage.setItem('queue', JSON.stringify(arrayFilmsQueue));\n  return arrayFilmsQueue;\n}\n\nexport function getWatchedFilms() {\n  // clearLibrary();\n  try {\n    const saveFilms = localStorage.getItem('watched');\n    //Якщо в localStorage немає ключа watched - показуємо заглушку\n    if (saveFilms === null) {\n      addScreenSaver();\n      return;\n    }\n\n    const parsedFilms = JSON.parse(saveFilms);\n    if (parsedFilms.length === 0) {\n      addScreenSaver();\n      return;\n    }\n\n    const renderWatched = makingMarkup(parsedFilms);\n    insertFilmsMarkupToHome(renderWatched);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function getQueueFilms() {\n  clearLibrary();\n  try {\n    const saveFilms = localStorage.getItem('queue');\n    //Якщо в localStorage немає ключа queue - показуємо заглушку\n    if (saveFilms === null) {\n      addScreenSaver();\n      return;\n    }\n\n    const parsedFilms = JSON.parse(saveFilms);\n    // Перевірка на порожній масив в localStorage\n    if (parsedFilms.length === 0) {\n      addScreenSaver();\n      return;\n    }\n\n    const renderQueue = makingMarkup(parsedFilms);\n    insertFilmsMarkupToHome(renderQueue);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//   Фунуція для очищення попередніх результатів рендеру\nfunction clearLibrary() {\n  refs.homeCardsContainer.innerHTML = '';\n}\n\n// Функція для відмальовки \"заглушки\" (якщо localStorage порожній)\nfunction addScreenSaver() {\n  refs.homeCardsContainer.innerHTML = `<strong \n    style=\"\n    font-size: 18px;\n    color: var(--secondary-text-cl);\">\n    Sorry, no information has been added\n    </strong>`;\n}\n","import { refs } from './refs';\nimport { getWatchedFilms, getQueueFilms } from './local_storage';\n\n// refs.btnWatched.addEventListener('click', onBtnWatchedClick);\n// refs.btnQueue.addEventListener('click', onBtnQueueClick);\n\n// getWatchedFilms();\n\nfunction onBtnWatchedClick(e) {\n  // getWatchedFilms();\n\n  refs.btnWatched.style.backgroundColor = 'var(--button-bg-cl)';\n  refs.btnWatched.style.borderColor = 'var(--button-bg-cl)';\n  refs.btnQueue.style.backgroundColor = 'transparent';\n  refs.btnQueue.style.borderColor = 'var(--header-text-cl)';\n}\n\nfunction onBtnQueueClick(e) {\n  // getQueueFilms();\n\n  refs.btnQueue.style.backgroundColor = 'var(--button-bg-cl)';\n  refs.btnQueue.style.borderColor = 'var(--button-bg-cl)';\n  refs.btnWatched.style.backgroundColor = 'transparent';\n  refs.btnWatched.style.borderColor = 'var(--header-text-cl)';\n}\n"],"names":["$iSn7Y","parcelRequire","$24513894e16dca13$var$BASE_POSTER_URL","$24513894e16dca13$export$2e2bcd8739ae039","results","map","param","vote","title","name","poster_path","genre_ids","release_date","first_air_date","vote_average","id","imagePath","concat","toFixed","gettingGenresListForCard","$24513894e16dca13$var$setReleaseDate","join","year","slice","$dbdf35d290f0d4ec$export$eebf935b9ee3c024","array","genre_names","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","genre_name","localStorage","getItem","err","return","$dbdf35d290f0d4ec$export$a0fef2a13268cf9e","length","counter","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","id1","genre_name1","$37e33676934ad046$export$21666b427502ea6d","homeCardsContainer","document","querySelector","btnAddToWatched","btnAddToQueue","closeModalBtn","DEBOUNCE_DELAY","formSearch","filmsSearchList","modalCardBackdrop","modalCardContainer","inputSearch","$4Nugj","$deb9770d47bfca92$export$c6520a5cb8c6a471","filmsMarkup","refs","insertAdjacentHTML","$59d24059f9f5cdf0$var$onCloseModalBtnClick","window","removeEventListener","$59d24059f9f5cdf0$var$modalCloseByEsc","body","classList","remove","innerHTML","e","code","addEventListener","target","nodeName","add","currentId","dataset","unParsedCurrentArrayFilms","currentMovie","JSON","parse","find","obj","markup","vote_count","popularity","original_title","original_name","gettingGenresListForModal","overview","$cbazt","addWatchedLocalStorage","$37jAB","default","console","log","currentTarget","$8ddeb65522df330d$export$8095c7988189260c","arrayFilmsWatched","w","push","setItem","stringify"],"version":3,"file":"index.a3106fb4.js.map"}