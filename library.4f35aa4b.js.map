{"mappings":"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","sources":["src/js/library-header-btns.js","src/js/pagination-library.js","src/js/api/loadModalCardLibrary.js"],"sourcesContent":["import { refs } from './refs';\nimport { getWatchedFilms, getQueueFilms } from './local_storage';\nimport { createPagination } from './pagination-library';\n\n\nrefs.btnWatched.addEventListener('click', onBtnWatchedClick);\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\n\n// getWatchedFilms();\n\nfunction onBtnWatchedClick(e) {\n  // getWatchedFilms();\n  createPagination('watched');\n\n  refs.btnWatched.style.backgroundColor = 'var(--button-bg-cl)';\n  refs.btnWatched.style.borderColor = 'var(--button-bg-cl)';\n  refs.btnQueue.style.backgroundColor = 'transparent';\n  refs.btnQueue.style.borderColor = 'var(--header-text-cl)';\n}\n\nfunction onBtnQueueClick(e) {\n  // getQueueFilms();\n  createPagination('queue');\n\n\n  refs.btnQueue.style.backgroundColor = 'var(--button-bg-cl)';\n  refs.btnQueue.style.borderColor = 'var(--button-bg-cl)';\n  refs.btnWatched.style.backgroundColor = 'transparent';\n  refs.btnWatched.style.borderColor = 'var(--header-text-cl)';\n}\n","import Pagination from 'tui-pagination';\nimport MoviesApiService from './api/moviesApiServiceClass';\nimport makingMarkup from './api/render-card-markup';\nimport { insertFilmsMarkupToLibrary } from './api/insertingIntoDifferentContainers';\nimport { refs } from './refs';\nimport { getWatchedFilms, getQueueFilms } from './local_storage';\nimport { createSpinner } from './spinner';\n\n// getWatchedFilms()\n\nlet fullLibrary = JSON.parse(localStorage.getItem('watched'));\ncreatePagination('watched');\n\nexport function createPagination(name) {\n  fullLibrary = JSON.parse(localStorage.getItem(`${name}`));\n  const container = document.getElementById('pagination-library');\n  const options = {\n    totalItems: fullLibrary.length,\n    itemsPerPage: 10,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: true,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n  const mediaQuery = window.matchMedia('(max-width: 768px)');\n  mediaQuery.addEventListener('change', handleMobileChange);\n  function handleMobileChange(event) {\n    // console.log('EVENT: ', event);\n    if (event.matches) {\n      // console.log('OPTIONS: ', options);\n      options.visiblePages = 3;\n    }\n  }\n  handleMobileChange(mediaQuery);\n\n  const pagination = new Pagination(container, options);\n  displayList(fullLibrary, options.itemsPerPage, options.page);\n\n  pagination.on('afterMove', event => {\n    refs.libraryCardsContainer.innerHTML = '';\n\n    // спиннер не работает\n    // createSpinner();\n\n    const currentPage = event.page;\n    displayList(fullLibrary, options.itemsPerPage, currentPage);\n  });\n\n  function displayList(items, rows_per_page, page) {\n    refs.libraryCardsContainer.innerHTML = '';\n    page -= 1;\n\n    let start = rows_per_page * page;\n    let end = start + rows_per_page;\n\n    if (!items) {\n      return;\n    }\n\n    const markup = items.slice(start, end);\n    const renderWatched = makingMarkup(markup);\n    insertFilmsMarkupToLibrary(renderWatched);\n  }\n}\n","import { gettingGenresListForModal } from './gettingGenresList';\nimport makingMarkup from '../api/render-card-markup';\n// import MoviesApiService from './moviesApiServiceClass';\nimport { refs } from '../refs';\nimport { insertModalMarkupHome } from './insertingIntoDifferentContainers';\nimport {\n  addWatchedLocalStorage,\n  addQueueLocalStorage,\n  deleteQueue,\n  deleteWatched,\n} from '../local_storage';\nimport { textModalBtn } from '../modal-btns';\n// const moviesApiService = new MoviesApiService();\n\nrefs.libraryCardsContainer.addEventListener('click', clickOnMovie);\nrefs.closeModalBtn.addEventListener('click', onCloseModalBtnClick);\nrefs.modalCardBackdrop.addEventListener('click', onModalCardBackdropClick);\n\nfunction clickOnMovie(e) {\n  if (e.target.nodeName !== 'IMG' && e.target.nodeName !== 'B') {\n    return;\n  }\n\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', modalCloseByEsc);\n\n  const currentId = e.target.dataset.id;\n  const unParsedCurrentArrayFilms = localStorage.getItem('currentFilm');\n  const parsedCurrentArrayFilms = JSON.parse(unParsedCurrentArrayFilms);\n\n  // console.log(parsedCurrentArrayFilms.find(obj => obj.id == currentId));\n  let currentMovie = parsedCurrentArrayFilms.find(obj => obj.id == currentId);\n\n  const render = makingModalCardMarkup(currentMovie);\n  insertModalMarkupHome(render);\n  ///////////////////////////////////////////////////////////////////////////\n  //** Код для запису об'єктів в LOCAL STORAGE */\n  document.querySelector('#watched-btn').addEventListener('click', () => {\n    let arrayFilmsWatched = [];\n    const w = localStorage.getItem('watched');\n    if (w) {\n      arrayFilmsWatched = JSON.parse(w);\n    }\n\n    // Перевірка на наявність об'єкта в масиві фільмів \"WATCHED\"\n    const isAddedFilm = arrayFilmsWatched.find(arr => arr.id == currentId);\n    isAddedFilm\n      ? deleteWatched(currentMovie)\n      : addWatchedLocalStorage(currentMovie);\n    textModalBtn(currentId);\n  });\n\n  document.querySelector('#queue-btn').addEventListener('click', () => {\n    let arrayFilmsQueue = [];\n    const q = localStorage.getItem('queue');\n    if (q) {\n      arrayFilmsQueue = JSON.parse(q);\n    }\n\n    // Перевірка на наявність об'єкта в масиві фільмів \"QUEUE\"\n    const isAddedFilm = arrayFilmsQueue.find(arr => arr.id == currentId);\n    isAddedFilm\n      ? deleteQueue(currentMovie)\n      : addQueueLocalStorage(currentMovie);\n    textModalBtn(currentId);\n  });\n  /////////////////////////////////////////////////////////////////////////////\n  textModalBtn(currentId);\n}\n\nfunction onCloseModalBtnClick() {\n  window.removeEventListener('keydown', modalCloseByEsc);\n  document.body.classList.remove('show-modal');\n  refs.modalCardContainer.innerHTML = '';\n}\n\nfunction modalCloseByEsc(e) {\n  if (e.code === 'Escape') {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction onModalCardBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction makingModalCardMarkup(obj) {\n  const markup = `<div class=\"movie__container--left-side\">              \n                  <img class=\"movie__image\" src=\"https://www.themoviedb.org/t/p/w500${\n                    obj.poster_path ||\n                    `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`\n                  }\"\n                    alt=\"${obj.title || obj.name}\" />\n\n                    <button type=\"button\" class=\"movie__btn-trailer\">\n                        <svg width='100' height='60' class='youtube-icon' viewBox='0 -77 512.00213 512'>\n                            <path\n                                d='m501.453125 56.09375c-5.902344-21.933594-23.195313-39.222656-45.125-45.128906-40.066406-10.964844-200.332031-10.964844-200.332031-10.964844s-160.261719 0-200.328125 10.546875c-21.507813 5.902344-39.222657 23.617187-45.125 45.546875-10.542969 40.0625-10.542969 123.148438-10.542969 123.148438s0 83.503906 10.542969 123.148437c5.90625 21.929687 23.195312 39.222656 45.128906 45.128906 40.484375 10.964844 200.328125 10.964844 200.328125 10.964844s160.261719 0 200.328125-10.546875c21.933594-5.902344 39.222656-23.195312 45.128906-45.125 10.542969-40.066406 10.542969-123.148438 10.542969-123.148438s.421875-83.507812-10.546875-123.570312zm0 0'\n                                fill='#f00'></path>\n                            <path d='m204.96875 256 133.269531-76.757812-133.269531-76.757813zm0 0' fill='#fff'></path>\n                        </svg>                      \n                    </button>                \n            </div>\n            <div class=\"movie__container--rigth-side\">\n                <h2 class=\"movie__title\">${obj.title || obj.name}</h2>\n                <table class=\"movie__info\">\n                    <tbody>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Vote / Votes</td>\n                            <td class=\"movie__info-rating\">\n                                <span class=\"movie__info-rating-value movie__info-rating--accent\">${\n                                  obj.vote_average\n                                }</span>\n                                <span class=\"movie__info-rating-slash\">/</span>\n                                <span class=\"movie__info-rating-value\">${\n                                  obj.vote_count\n                                }</span>\n                            </td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Popularity</td>\n                            <td class=\"movie__info-numbers\">${\n                              obj.popularity\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Original Title</td>\n                            <td class=\"movie__info-value\">${\n                              obj.original_title || obj.original_name\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows movie__info-rows--last\">\n                            <td class=\"movie__info-name\">Genre</td>\n                            <td class=\"movie__info-value\">${\n                              gettingGenresListForModal(obj.genre_ids) ||\n                              'Genre not defined'\n                            }</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h2 class=\"movie__about-title\">About</h2>\n                <p class=\"movie__about-text\">\n                    ${obj.overview || 'No text'}\n                </p>\n                <div class=\"movie__btn-container\">\n                   \n                    <button type=\"submit\" id=\"watched-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn--accent\">ADD TO WATCHED\n                        </button>\n                    <button type=\"submit\" id=\"queue-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn-queue\">ADD TO QUEUE\n                        </button>\n                </div>\n            </div>\n        </div>`;\n  return markup;\n}\n\nexport { makingModalCardMarkup };\n"],"names":["$krGWQ","parcelRequire","$fb9GJ","$37dad58aaab9173a$var$fullLibrary","JSON","parse","localStorage","getItem","$37dad58aaab9173a$export$7f3155e3cda021fd","name","container","document","getElementById","options","totalItems","length","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","mediaQuery","window","matchMedia","handleMobileChange","event","matches","addEventListener","pagination","$parcel$interopDefault","displayList","items","rows_per_page","refs","libraryCardsContainer","innerHTML","start","end","markup","slice","renderWatched","$jU4ZD","default","$7x8k5","insertFilmsMarkupToLibrary","on","btnWatched","e","style","backgroundColor","borderColor","btnQueue","$1drNe","$ebdeb9d781fb2b98$var$onCloseModalBtnClick","removeEventListener","$ebdeb9d781fb2b98$var$modalCloseByEsc","body","classList","remove","modalCardContainer","code","target","nodeName","add","currentId","dataset","id","unParsedCurrentArrayFilms","currentMovie","find","obj","render","poster_path","title","vote_average","vote_count","popularity","original_title","original_name","gettingGenresListForModal","genre_ids","overview","insertModalMarkupHome","querySelector","arrayFilmsWatched","w","arr","$fnyLm","deleteWatched","addWatchedLocalStorage","$kYzA7","textModalBtn","arrayFilmsQueue","q","deleteQueue","addQueueLocalStorage","closeModalBtn","modalCardBackdrop","currentTarget"],"version":3,"file":"library.4f35aa4b.js.map"}