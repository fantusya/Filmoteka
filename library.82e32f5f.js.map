{"mappings":"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","sources":["src/js/library-header-btns.js","src/js/pagination-library.js","src/js/api/loadModalCardLibrary.js"],"sourcesContent":["import { refs } from './refs';\nimport { getWatchedFilms, getQueueFilms } from './local_storage';\nimport { createLibraryPagination } from './pagination-library';\n\nrefs.btnWatched.addEventListener('click', onBtnWatchedClick);\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\n\ncreateLibraryPagination('watched');\n\nfunction onBtnWatchedClick(e) {\n  createLibraryPagination('watched');\n\n  refs.btnWatched.style.backgroundColor = 'var(--button-bg-cl)';\n  refs.btnWatched.style.borderColor = 'var(--button-bg-cl)';\n  refs.btnQueue.style.backgroundColor = 'transparent';\n  refs.btnQueue.style.borderColor = 'var(--header-text-cl)';\n}\n\nfunction onBtnQueueClick(e) {\n  createLibraryPagination('queue');\n\n  refs.btnQueue.style.backgroundColor = 'var(--button-bg-cl)';\n  refs.btnQueue.style.borderColor = 'var(--button-bg-cl)';\n  refs.btnWatched.style.backgroundColor = 'transparent';\n  refs.btnWatched.style.borderColor = 'var(--header-text-cl)';\n}\n","import Pagination from 'tui-pagination';\nimport makingMarkup from './api/render-card-markup';\nimport { insertFilmsMarkupToLibrary } from './api/insertingIntoDifferentContainers';\nimport { refs } from './refs';\nimport { clearLibrary } from './local_storage';\nimport { addScreenSaver } from './local_storage';\n\nexport function createLibraryPagination(name) {\n  let fullLibrary = JSON.parse(localStorage.getItem(`${name}`));\n  // console.log(fullLibrary);\n  const container = document.getElementById('pagination-library');\n\n  if (!fullLibrary || fullLibrary.length === 0) {\n    clearLibrary();\n    addScreenSaver();\n    return;\n  }\n  // console.log(fullLibrary.length);\n\n  const options = {\n    totalItems: fullLibrary.length,\n    itemsPerPage: 6,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: true,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n  const mediaQuery = window.matchMedia('(max-width: 768px)');\n  mediaQuery.addEventListener('change', handleMobileChange);\n  function handleMobileChange(event) {\n    // console.log('EVENT: ', event);\n    if (event.matches) {\n      // console.log('OPTIONS: ', options);\n      options.visiblePages = 3;\n    }\n  }\n  handleMobileChange(mediaQuery);\n\n  const pagination = new Pagination(container, options);\n  displayList(fullLibrary, options.itemsPerPage, options.page);\n\n  pagination.on('afterMove', event => {\n    refs.libraryCardsContainer.innerHTML = '';\n    const currentPage = event.page;\n    displayList(fullLibrary, options.itemsPerPage, currentPage);\n  });\n\n  function displayList(items, rows_per_page, page) {\n    refs.libraryCardsContainer.innerHTML = '';\n    page -= 1;\n\n    let start = rows_per_page * page;\n    let end = start + rows_per_page;\n\n    if (!items || items.length === 0) {\n      refs.libraryCardsContainer.innerHTML = '';\n      return;\n    }\n\n    const markup = items.slice(start, end);\n    const renderWatched = makingMarkup(markup);\n    insertFilmsMarkupToLibrary(renderWatched);\n  }\n}\n","import { gettingGenresListForModal } from './gettingGenresList';\nimport makingMarkup from '../api/render-card-markup';\n// import MoviesApiService from './moviesApiServiceClass';\nimport { refs } from '../refs';\nimport { insertModalMarkupHome } from './insertingIntoDifferentContainers';\nimport {\n  addWatchedLocalStorage,\n  addQueueLocalStorage,\n  deleteQueue,\n  deleteWatched,\n} from '../local_storage';\nimport { textModalBtn } from '../modal-btns';\nimport { BASE_POSTER_URL } from '../api/constants/baseUrls';\nimport { setReleaseVote } from '../api/setReleaseDate';\n// const moviesApiService = new MoviesApiService();\n\nrefs.libraryCardsContainer.addEventListener('click', clickOnMovie);\nrefs.closeModalBtn.addEventListener('click', onCloseModalBtnClick);\nrefs.modalCardBackdrop.addEventListener('click', onModalCardBackdropClick);\n\n// Додано змінну для умови видалення фільму: головна сторінка чи бібліотека\nconst style = refs.homeCardsContainer;\n\nfunction clickOnMovie(e) {\n  if (\n    e.target.nodeName !== 'IMG' &&\n    e.target.nodeName !== 'DIV' &&\n    e.target.nodeName !== 'B' &&\n    e.target.nodeName !== 'H2' &&\n    e.target.nodeName !== 'P'\n  ) {\n    return;\n  }\n\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', modalCloseByEsc);\n\n  const currentId = e.target.dataset.id;\n\n  const unParsedCurrentArrayFilmsW = localStorage.getItem('watched');\n  const unParsedCurrentArrayFilmsQ = localStorage.getItem('queue');\n\n  const parsedCurrentArrayFilmsW = JSON.parse(unParsedCurrentArrayFilmsW);\n  const parsedCurrentArrayFilmsQ = JSON.parse(unParsedCurrentArrayFilmsQ);\n\n  // console.log(parsedCurrentArrayFilms.find(obj => obj.id == currentId));\n  let libraryMovieWatched = parsedCurrentArrayFilmsW.find(obj => obj.id == currentId);\n  let libraryMovieQueue = parsedCurrentArrayFilmsQ.find(obj => obj.id == currentId);\n\n  const render = makingModalCardMarkup(libraryMovieWatched || libraryMovieQueue);\n  insertModalMarkupHome(render);\n  ///////////////////////////////////////////////////////////////////////////\n  //** Код для запису об'єктів в LOCAL STORAGE */\n  const watchedBtn = document.querySelector('#watched-btn');\n  watchedBtn.addEventListener('click', () => {\n    let arrayFilmsWatched = [];\n    const w = localStorage.getItem('watched');\n    if (w) {\n      arrayFilmsWatched = JSON.parse(w);\n    }\n\n    // Перевірка на наявність об'єкта в масиві фільмів \"WATCHED\"\n    const isAddedFilm = arrayFilmsWatched.find(arr => arr.id == currentId);\n    isAddedFilm\n      ? deleteWatched(libraryMovieWatched)\n      : addWatchedLocalStorage(libraryMovieQueue, watchedBtn, style);\n    textModalBtn(currentId);\n  });\n\n  const queueBtn = document.querySelector('#queue-btn');\n  queueBtn.addEventListener('click', () => {\n    let arrayFilmsQueue = [];\n    const q = localStorage.getItem('queue');\n    if (q) {\n      arrayFilmsQueue = JSON.parse(q);\n    }\n\n    // Перевірка на наявність об'єкта в масиві фільмів \"QUEUE\"\n    const isAddedFilm = arrayFilmsQueue.find(arr => arr.id == currentId);\n    isAddedFilm\n      ? deleteQueue(libraryMovieQueue)\n      : addQueueLocalStorage(libraryMovieWatched, queueBtn, style);\n    textModalBtn(currentId);\n  });\n  /////////////////////////////////////////////////////////////////////////////\n  textModalBtn(currentId);\n}\n\nfunction onCloseModalBtnClick() {\n  window.removeEventListener('keydown', modalCloseByEsc);\n  document.body.classList.remove('show-modal');\n  refs.modalCardContainer.innerHTML = '';\n}\n\nfunction modalCloseByEsc(e) {\n  if (e.code === 'Escape') {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction onModalCardBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction makingModalCardMarkup(obj) {\n  let imagePath = ``;\n  !obj.poster_path\n    ? (imagePath = `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`)\n    : (imagePath = `${BASE_POSTER_URL}/${obj.poster_path}`);\n  const markup = `<div class=\"movie__container--left-side\">              \n                  <img class=\"movie__image\" src=\"${imagePath}\"\n                    alt=\"${obj.title || obj.name}\" />\n                    <button type=\"button\" class=\"movie__btn-trailer\">\n                        <svg width='120' height='80' class='youtube-icon' viewBox='0 -77 512.00213 512'>\n                            <path\n                                d='m501.453125 56.09375c-5.902344-21.933594-23.195313-39.222656-45.125-45.128906-40.066406-10.964844-200.332031-10.964844-200.332031-10.964844s-160.261719 0-200.328125 10.546875c-21.507813 5.902344-39.222657 23.617187-45.125 45.546875-10.542969 40.0625-10.542969 123.148438-10.542969 123.148438s0 83.503906 10.542969 123.148437c5.90625 21.929687 23.195312 39.222656 45.128906 45.128906 40.484375 10.964844 200.328125 10.964844 200.328125 10.964844s160.261719 0 200.328125-10.546875c21.933594-5.902344 39.222656-23.195312 45.128906-45.125 10.542969-40.066406 10.542969-123.148438 10.542969-123.148438s.421875-83.507812-10.546875-123.570312zm0 0'\n                                fill='#f00'></path>\n                            <path d='m204.96875 256 133.269531-76.757812-133.269531-76.757813zm0 0' fill='#fff'></path>\n                        </svg>\n                    </button>                \n            </div>\n            <div class=\"movie__container--rigth-side\">\n                <h2 class=\"movie__title\">${obj.title || obj.name}</h2>\n                <table class=\"movie__info\">\n                    <tbody>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\" data-key=\"votes\">Vote / Votes</td>\n                            <td class=\"movie__info-rating\">\n                                <span class=\"movie__info-rating-value movie__info-rating--accent\">${setReleaseVote(\n                                  obj.vote_average\n                                )}</span>\n                                <span class=\"movie__info-rating-slash\">/</span>\n                                <span class=\"movie__info-rating-value\">${setReleaseVote(\n                                  obj.vote_count\n                                )}</span>\n                            </td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\" data-key=\"popularity\">Popularity</td>\n                            <td class=\"movie__info-numbers\">${\n                              obj.popularity\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\" data-key=\"originalTitle\">Original Title</td>\n                            <td class=\"movie__info-value\">${\n                              obj.original_title || obj.original_name\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows movie__info-rows--last\">\n                            <td class=\"movie__info-name\" data-key=\"genre\">Genre</td>\n                            <td class=\"movie__info-value\">${\n                              gettingGenresListForModal(obj.genre_ids) ||\n                              'Genre not defined'\n                            }</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h2 class=\"movie__about-title\" data-key=\"about\">About</h2>\n                <p class=\"movie__about-text\">\n                    ${obj.overview || 'No text'}\n                </p>\n                <div class=\"movie__btn-container\">\n                   \n                    <button type=\"submit\" id=\"watched-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn--accent\">ADD TO WATCHED\n                        </button>\n                    <button type=\"submit\" id=\"queue-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn-queue\">ADD TO QUEUE\n                        </button>\n                </div>\n            </div>\n        </div>`;\n  return markup;\n}\n\nexport { makingModalCardMarkup };\n"],"names":["$4Nugj","parcelRequire","$1VFfL","$4e1fdcffa24ebef7$export$27957ca3b979faf5","name","fullLibrary","JSON","parse","localStorage","getItem","concat","container","document","getElementById","length","$cbazt","clearLibrary","addScreenSaver","options","totalItems","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","mediaQuery","window","matchMedia","handleMobileChange","event","matches","addEventListener","pagination","$parcel$interopDefault","displayList","items","rows_per_page","refs","libraryCardsContainer","innerHTML","start","end","markup","slice","renderWatched","$37jAB","default","$j7yxE","insertFilmsMarkupToLibrary","on","btnWatched","e","style","backgroundColor","borderColor","btnQueue","$iSn7Y","target","nodeName","body","classList","add","$b4acff643dea45e3$var$modalCloseByEsc","currentId","dataset","id","unParsedCurrentArrayFilmsW","unParsedCurrentArrayFilmsQ","parsedCurrentArrayFilmsW","parsedCurrentArrayFilmsQ","libraryMovieWatched","find","obj","libraryMovieQueue","render","imagePath","poster_path","$4QKg3","BASE_POSTER_URL","title","$h7AsZ","setReleaseVote","vote_average","vote_count","popularity","original_title","original_name","gettingGenresListForModal","genre_ids","overview","insertModalMarkupHome","watchedBtn","querySelector","arrayFilmsWatched","w","arr","deleteWatched","addWatchedLocalStorage","$b4acff643dea45e3$var$style","$4uNB6","textModalBtn","queueBtn","arrayFilmsQueue","q","deleteQueue","addQueueLocalStorage","closeModalBtn","$b4acff643dea45e3$var$onCloseModalBtnClick","modalCardBackdrop","currentTarget","homeCardsContainer","removeEventListener","remove","modalCardContainer","code"],"version":3,"file":"library.82e32f5f.js.map"}