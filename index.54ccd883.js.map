{"mappings":"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","sources":["src/js/api/main-home-file.js","src/js/pagination.js","src/js/modal-btns.js","node_modules/debounce/index.js","src/js/searchFilmByKeyword/render_search_films.js","src/js/searchFilmByKeyword/search_films_by_keyword_input.js","src/js/searchFilmByKeyword/search_films_by_keyword_submit.js","src/js/pagination-query.js","src/js/searchFilmByKeyword/timeoutForBadRequest.js","src/js/api/loadModalCard.js","src/js/vendors/aos.js"],"sourcesContent":["import MoviesApiService from './moviesApiServiceClass';\nimport Spinner from '../spinner';\nimport makingMarkup from './render-card-markup';\nimport { insertFilmsMarkupToHome } from './insertingIntoDifferentContainers';\nimport { refs } from '../refs';\nimport { createPagination } from '../pagination';\n\nconst moviesApiService = new MoviesApiService();\nconst spinner = new Spinner();\n\n// GETTING GENRES TO LOCALSTORAGE\n// DO NOT MOVE THIS FUNCTION!!!\nmoviesApiService\n  .fetchGenres()\n  .then(({ genres }) => {\n    for (const { id, name } of genres) {\n      //   console.log(id);\n      //   console.log(name);\n      localStorage.setItem(`genre_${id}`, name);\n    }\n  })\n  .catch(error => console.log(error));\n\n// RENDERING MARKUP USING GENRES FROM LOCALSTORAGE\nspinner.show();\nmoviesApiService\n  .fetchTrendingMovies()\n  .then(({ results, total_results }) => {\n    const markup = makingMarkup(results);\n\n    spinner.hide();\n    insertFilmsMarkupToHome(markup);\n    createPagination(total_results);\n    localStorage.setItem(`currentFilm`, JSON.stringify(results));\n  })\n  .catch(error => console.log(error));\n","import Pagination from 'tui-pagination';\nimport MoviesApiService from './api/moviesApiServiceClass';\nimport Spinner from './spinner'\nimport makingMarkup from './api/render-card-markup';\nimport { insertFilmsMarkupToHome } from './api/insertingIntoDifferentContainers';\nimport { refs } from './refs';\n\nconst moviesApiService = new MoviesApiService();\nconst spinner = new Spinner();\n\nexport function createPagination(total_results) {\n  const container = document.getElementById('pagination');\n  const options = {\n    totalItems: total_results,\n    itemsPerPage: 20,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: true,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n\n  const mediaQuery = window.matchMedia('(max-width: 768px)');\n  mediaQuery.addEventListener('change', handleMobileChange);\n  function handleMobileChange(event) {\n    // console.log('EVENT: ', event);\n    if (event.matches) {\n      // console.log('OPTIONS: ', options);\n      options.visiblePages = 3;\n    }\n  }\n  handleMobileChange(mediaQuery);\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('afterMove', event => {\n    refs.homeCardsContainer.innerHTML = '';\n\n    spinner.show();\n\n    moviesApiService.page = event.page;\n    moviesApiService\n      .fetchTrendingMovies()\n      .then(({ results }) => {\n        const markup = makingMarkup(results);\n\n        spinner.hide();\n        insertFilmsMarkupToHome(markup);\n        localStorage.setItem(`currentFilm`, JSON.stringify(results));\n      })\n      .catch(error => console.log(error));\n  });\n}\n","import { refs } from './refs';\n\nexport async function textModalBtn(id) {\n  const btnQueue = document.querySelector('#queue-btn');\n  const btnWatch = document.querySelector('#watched-btn');\n  if (inList(id, 'watched')) {\n    console.log('есть такой в watched');\n    btnWatch.textContent = 'Added to watched';\n    btnWatch.disabled = true;\n    function changeText() {\n      console.log('Функція працює!!!!');\n      btnWatch.disabled = false;\n      btnWatch.textContent = 'Remove from watched';\n      btnWatch.classList.add('active');\n    }\n    setTimeout(changeText, 1000);\n  } else {\n    console.log('нет такого в watched');\n    btnWatch.textContent = 'Add to watched';\n    btnWatch.classList.remove('active');\n    console.log('удаляем класс active');\n    btnWatch.disabled = false;\n  }\n\n  if (inList(id, 'queue')) {\n    console.log('есть такой в queue');\n    btnQueue.textContent = 'Added to queue';\n    btnQueue.disabled = true;\n    function changeText() {\n      btnQueue.disabled = false;\n      btnQueue.textContent = 'Remove from queue';\n      btnQueue.classList.add('active');\n    }\n    setTimeout(changeText, 1000);\n  } else {\n    console.log('нет такого в queue');\n    btnQueue.textContent = 'Add to queue';\n    btnQueue.classList.remove('active');\n    btnQueue.disabled = false;\n  }\n}\n\nfunction inList(id, list) {\n  let localListJson = load(list);\n  // console.log(localListJson);\n  const findMovie = localListJson.find(item => item.id == id);\n  return findMovie ? true : false;\n}\n\nconst load = key => {\n  try {\n    let serializedState = localStorage.getItem(key);\n\n    return (serializedState = JSON.parse(serializedState) || undefined);\n  } catch (err) {\n    console.error('Get state error: ', err);\n  }\n};\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","import { refs } from './../refs';\n\n//* функція рендерить розмітку випадаючого меню\nexport default function renderMarkupSearchFilms(films) {\n  refs.filmsSearchList.innerHTML = '';\n  refs.filmsSearchList.classList.remove('search-form__list--bgc');\n\n  //* якщо запит не коректний\n  if(films.results.length === 0) {\n    const markup = '<p class=\"search-form--badrequest\">Search result not successful. Enter the correct movie name!</p>';\n    refs.filmsSearchList.innerHTML = markup;\n    return;\n  }; \n\n    //*рендер фільмів у випадаючому списку\n    const markup = films.results.slice(0,5).map(( { title, vote_average} ) => {\n      return `<li class=\"search-form__item\">${title} - ${vote_average}</li>`;\n    }).join('');\n    refs.filmsSearchList.classList.add('search-form__list--bgc');\n  \n\n  refs.filmsSearchList.insertAdjacentHTML(\"beforeend\", markup);\n};","import { debounce } from 'debounce';\nimport { refs } from './../refs';\n// import fetchFilms from './fetch_search_films';\nimport MoviesApiService from '../api/moviesApiServiceClass';\nimport renderMarkupSearchFilms from './render_search_films';\n\nconst moviesApiService = new MoviesApiService();\n\n// refs.formSearch.addEventListener(\n//   'input',\n//   debounce(onSearchByKeyword, refs.DEBOUNCE_DELAY)\n// );\n\n// * функція обробляє результат fetch та викликає на його основі рендеринг випадаючого меню\n// function onSearchByKeyword(e) {\n//   const filmName = e.target.value.trim();\n\n//   if (!filmName) {\n//     refs.filmsSearchList.innerHTML = '';\n//     refs.filmsSearchList.classList.remove('search-form__list--bgc');\n//     return;\n//   }\n\n//   try {\n//     moviesApiService.fetchSearchingMovies().then(films => {\n//       renderMarkupSearchFilms(films);\n//     });\n//   } catch (err) {\n//     err => console.log(err);\n//   }\n// }","import { refs } from './../refs';\n// import fetchFilms from './fetch_search_films';\nimport MoviesApiService from '../api/moviesApiServiceClass';\nimport Spinner from '../spinner';\nimport makingMarkup from '../api/render-card-markup';\nimport { insertFilmsMarkupToHome } from '../api/insertingIntoDifferentContainers';\nimport { createPagination } from '../pagination-query';\nimport timeoutForBadRequest from './timeoutForBadRequest';\n\nconst movieApiServise = new MoviesApiService();\nconst spinner = new Spinner();\n\nrefs.formSearch.addEventListener('submit', onSearchFilmByKeyword);\n\n//* функція обробляє результат fetch та викликає на його основі рендеринг головної сторінки\nfunction onSearchFilmByKeyword(e) {\n  e.preventDefault();\n\n  const searchFilms = e.currentTarget.elements.searchInput.value.trim();\n  movieApiServise.query = searchFilms;\n\n  refs.homeCardsContainer.innerHTML = '';\n  spinner.show();\n  try {\n    movieApiServise\n      .fetchSearchingMovies()\n      .then(({ results, total_results }) => {\n        if (results.length === 0) {\n          timeoutForBadRequest();\n          return;\n        };\n\n        const searchingMarkup = makingMarkup(results);\n\n        spinner.hide();\n        insertFilmsMarkupToHome(searchingMarkup);\n        createPagination(total_results, searchFilms);\n      });\n  } catch (err) {\n    err => console.log(err);\n  };\n\n  refs.inputSearch.value = '';\n  refs.filmsSearchList.innerHTML = '';\n  refs.filmsSearchList.classList.remove('search-form__list--bgc');\n};\n","import Pagination from 'tui-pagination';\nimport MoviesApiService from './api/moviesApiServiceClass';\nimport Spinner from './spinner';\nimport makingMarkup from './api/render-card-markup';\nimport { insertFilmsMarkupToHome } from './api/insertingIntoDifferentContainers';\nimport { refs } from './refs';\n\nconst moviesApiService = new MoviesApiService();\nconst spinner = new Spinner();\n\nexport function createPagination(total_results, searchQuery) {\n  const container = document.getElementById('pagination');\n  const options = {\n    totalItems: total_results,\n    itemsPerPage: 20,\n    visiblePages: 5,\n    page: 1,\n    centerAlign: true,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n      page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n      currentPage:\n        '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n      moveButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</a>',\n      disabledMoveButton:\n        '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n        '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n        '</span>',\n      moreButton:\n        '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n        '<span class=\"tui-ico-ellip\">...</span>' +\n        '</a>',\n    },\n  };\n\n  const mediaQuery = window.matchMedia('(max-width: 768px)');\n  mediaQuery.addEventListener('change', handleMobileChange);\n  function handleMobileChange(event) {\n    // console.log('EVENT: ', event);\n    if (event.matches) {\n      // console.log('OPTIONS: ', options);\n      options.visiblePages = 3;\n    }\n  }\n  handleMobileChange(mediaQuery);\n\n  const pagination = new Pagination(container, options);\n\n  pagination.on('afterMove', event => {\n    refs.homeCardsContainer.innerHTML = '';\n\n    spinner.show();\n    \n    moviesApiService.page = event.page;\n    moviesApiService.query = searchQuery;\n    moviesApiService\n      .fetchSearchingMovies()\n      .then(({ results }) => {\n        const markup = makingMarkup(results);\n\n        spinner.hide();\n        insertFilmsMarkupToHome(markup);\n        localStorage.setItem(`currentFilm`, JSON.stringify(results));\n      })\n      .catch(error => console.log(error));\n  });\n}\n","import { refs } from '../refs';\n\nexport default function timeoutForBadRequest() {\n  const markup =\n    '<p class=\"search-form--badrequest\">Search result not successful. Enter the correct movie name!</p>';\n    refs.filmsSearchList.innerHTML = markup;\n    const timer = setTimeout(() => refs.filmsSearchList.innerHTML = '', 2000)\n    return timer;\n};","import { gettingGenresListForModal } from './gettingGenresList';\nimport makingMarkup from '../api/render-card-markup';\n// import MoviesApiService from './moviesApiServiceClass';\nimport { refs } from '../refs';\nimport { insertModalMarkupHome } from './insertingIntoDifferentContainers';\nimport { addWatchedLocalStorage, addQueueLocalStorage } from '../local_storage';\nimport { textModalBtn } from '../modal-btns';\n// const moviesApiService = new MoviesApiService();\n\nrefs.homeCardsContainer.addEventListener('click', clickOnMovie);\nrefs.closeModalBtn.addEventListener('click', onCloseModalBtnClick);\nrefs.modalCardBackdrop.addEventListener('click', onModalCardBackdropClick);\n\nfunction clickOnMovie(e) {\n  if (e.target.nodeName !== 'IMG' && e.target.nodeName !== 'B') {\n    return;\n  }\n\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', modalCloseByEsc);\n\n  const currentId = e.target.dataset.id;\n  const unParsedCurrentArrayFilms = localStorage.getItem('currentFilm');\n  const parsedCurrentArrayFilms = JSON.parse(unParsedCurrentArrayFilms);\n\n  // console.log(parsedCurrentArrayFilms.find(obj => obj.id == currentId));\n  let currentMovie = parsedCurrentArrayFilms.find(obj => obj.id == currentId);\n\n  const render = makingModalCardMarkup(currentMovie);\n  insertModalMarkupHome(render);\n  ///////////////////////////////////////////////////////////////////////////\n  //** Код для запису об'єктів в LOCAL STORAGE */\n  document.querySelector('#watched-btn').addEventListener('click', () => {\n    addWatchedLocalStorage(currentMovie);\n    textModalBtn(currentId);\n  });\n\n  document.querySelector('#queue-btn').addEventListener('click', () => {\n    addQueueLocalStorage(currentMovie);\n    textModalBtn(currentId);\n  });\n  /////////////////////////////////////////////////////////////////////////////\n}\n\nfunction onCloseModalBtnClick() {\n  window.removeEventListener('keydown', modalCloseByEsc);\n  document.body.classList.remove('show-modal');\n  refs.modalCardContainer.innerHTML = '';\n}\n\nfunction modalCloseByEsc(e) {\n  if (e.code === 'Escape') {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction onModalCardBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction makingModalCardMarkup(obj) {\n  const markup = `<div class=\"movie__container--left-side\">              \n                  <img class=\"movie__image\" src=\"https://www.themoviedb.org/t/p/w500${\n                    obj.poster_path ||\n                    `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`\n                  }\"\n                    alt=\"${obj.title || obj.name}\" />\n\n                    <button type=\"button\" class=\"movie__btn-trailer\">\n                        <svg width='100' height='60' class='youtube-icon' viewBox='0 -77 512.00213 512'>\n                            <path\n                                d='m501.453125 56.09375c-5.902344-21.933594-23.195313-39.222656-45.125-45.128906-40.066406-10.964844-200.332031-10.964844-200.332031-10.964844s-160.261719 0-200.328125 10.546875c-21.507813 5.902344-39.222657 23.617187-45.125 45.546875-10.542969 40.0625-10.542969 123.148438-10.542969 123.148438s0 83.503906 10.542969 123.148437c5.90625 21.929687 23.195312 39.222656 45.128906 45.128906 40.484375 10.964844 200.328125 10.964844 200.328125 10.964844s160.261719 0 200.328125-10.546875c21.933594-5.902344 39.222656-23.195312 45.128906-45.125 10.542969-40.066406 10.542969-123.148438 10.542969-123.148438s.421875-83.507812-10.546875-123.570312zm0 0'\n                                fill='#f00'></path>\n                            <path d='m204.96875 256 133.269531-76.757812-133.269531-76.757813zm0 0' fill='#fff'></path>\n                        </svg>                      \n                    </button>                \n            </div>\n            <div class=\"movie__container--rigth-side\">\n                <h2 class=\"movie__title\">${obj.title || obj.name}</h2>\n                <table class=\"movie__info\">\n                    <tbody>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Vote / Votes</td>\n                            <td class=\"movie__info-rating\">\n                                <span class=\"movie__info-rating-value movie__info-rating--accent\">${\n                                  obj.vote_average\n                                }</span>\n                                <span class=\"movie__info-rating-slash\">/</span>\n                                <span class=\"movie__info-rating-value\">${\n                                  obj.vote_count\n                                }</span>\n                            </td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Popularity</td>\n                            <td class=\"movie__info-numbers\">${\n                              obj.popularity\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Original Title</td>\n                            <td class=\"movie__info-value\">${\n                              obj.original_title || obj.original_name\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows movie__info-rows--last\">\n                            <td class=\"movie__info-name\">Genre</td>\n                            <td class=\"movie__info-value\">${\n                              gettingGenresListForModal(obj.genre_ids) ||\n                              'Genre not defined'\n                            }</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h2 class=\"movie__about-title\">About</h2>\n                <p class=\"movie__about-text\">\n                    ${obj.overview || 'No text'}\n                </p>\n                <div class=\"movie__btn-container\">\n                   \n                    <button type=\"submit\" id=\"watched-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn--accent\">ADD TO WATCHED\n                        </button>\n                    <button type=\"submit\" id=\"queue-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn-queue\">ADD TO QUEUE\n                        </button>\n                </div>\n            </div>\n        </div>`;\n  return markup;\n}\n\nexport { makingModalCardMarkup };","AOS.init();\n"],"names":["$g887t","parcelRequire","$fb9GJ","$1bab9c519cfa82bc$var$moviesApiService","default","$1bab9c519cfa82bc$var$spinner","$04jNI","$1bab9c519cfa82bc$export$7f3155e3cda021fd","total_results","container","document","getElementById","options","totalItems","itemsPerPage","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","mediaQuery","window","matchMedia","handleMobileChange","event","matches","addEventListener","$parcel$interopDefault","on","$krGWQ","refs","homeCardsContainer","innerHTML","show","fetchTrendingMovies","then","results","markup","$jU4ZD","hide","$7x8k5","insertFilmsMarkupToHome","localStorage","setItem","JSON","stringify","catch","error","console","log","$b3b1805a313b9b92$var$moviesApiService","$b3b1805a313b9b92$var$spinner","async","$f45503018fc12fd5$export$8a3810b4756fc48b","id","btnQueue","querySelector","btnWatch","$f45503018fc12fd5$var$inList","textContent","disabled","setTimeout","classList","add","remove","list","$f45503018fc12fd5$var$load","find","item","fetchGenres","genres","name","key","serializedState","getItem","parse","undefined","err","$815ad92c071f8c63$var$debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","debounce","$3ebd676ebcadcb38$var$moviesApiService","$3ebd676ebcadcb38$var$spinner","$3ebd676ebcadcb38$export$7f3155e3cda021fd","searchQuery","query","fetchSearchingMovies","$f6771c8a34c594a8$export$2e2bcd8739ae039","filmsSearchList","$1d1cafd867145159$var$movieApiServise","$1d1cafd867145159$var$spinner","formSearch","e","preventDefault","searchFilms","currentTarget","elements","searchInput","value","trim","length","searchingMarkup","err1","inputSearch","$1drNe","$cf1697a32acb672b$var$onCloseModalBtnClick","removeEventListener","$cf1697a32acb672b$var$modalCloseByEsc","body","modalCardContainer","code","target","nodeName","currentId","dataset","unParsedCurrentArrayFilms","currentMovie","obj","render","poster_path","title","vote_average","vote_count","popularity","original_title","original_name","gettingGenresListForModal","genre_ids","overview","insertModalMarkupHome","$fnyLm","addWatchedLocalStorage","addQueueLocalStorage","closeModalBtn","modalCardBackdrop","AOS","init"],"version":3,"file":"index.54ccd883.js.map"}