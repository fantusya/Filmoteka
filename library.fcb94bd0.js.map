{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAIAD,EAAAE,KAAKC,WAAWC,iBAAiB,SAKjC,SAA2BC,IACzB,EAAAC,EAAAC,mBAGAP,EAAAE,KAAKC,WAAWK,MAAMC,gBAAkB,sBACxCT,EAAAE,KAAKC,WAAWK,MAAME,YAAc,sBACpCV,EAAAE,KAAKS,SAASH,MAAMC,gBAAkB,cACtCT,EAAAE,KAAKS,SAASH,MAAME,YAAc,uB,IAXpCV,EAAAE,KAAKS,SAASP,iBAAiB,SAc/B,SAAyBC,IACvB,EAAAC,EAAAM,iBAGAZ,EAAAE,KAAKS,SAASH,MAAMC,gBAAkB,sBACtCT,EAAAE,KAAKS,SAASH,MAAME,YAAc,sBAClCV,EAAAE,KAAKC,WAAWK,MAAMC,gBAAkB,cACxCT,EAAAE,KAAKC,WAAWK,MAAME,YAAc,uB,KAnBtC,EAAAJ,EAAAC,mBCPA,IAAAM,EAAAZ,EAAA,S,qEA4EA,SAASa,IACPC,OAAOC,oBAAoB,UAAWC,GACtCC,SAASC,KAAKC,UAAUC,OAAO,cAC/BrB,EAAAE,KAAKoB,mBAAmBC,UAAY,E,CAGtC,SAASN,EAAgBZ,GACR,WAAXA,EAAEmB,MACJV,G,CAtEJd,EAAAE,KAAKuB,sBAAsBrB,iBAAiB,SAI5C,SAAsBC,GACpB,GACwB,QAAtBA,EAAEqB,OAAOC,UACa,QAAtBtB,EAAEqB,OAAOC,UACa,MAAtBtB,EAAEqB,OAAOC,UACa,OAAtBtB,EAAEqB,OAAOC,UACa,MAAtBtB,EAAEqB,OAAOC,SAET,OAGFT,SAASC,KAAKC,UAAUQ,IAAI,cAC5Bb,OAAOX,iBAAiB,UAAWa,GAEnC,MAAMY,EAAYxB,EAAEqB,OAAOI,QAAQC,GAC7BC,EAA4BC,aAAaC,QAAQ,eAIvD,IAAIC,EAH4BC,KAAKC,MAAML,GAGAM,MAAKC,GAAOA,EAAIR,IAAMF,IAEjE,MAAMW,GAuDuBD,EAvDQJ,EAwDtB,gJAEGI,EAAIE,aACJ,kHAEOF,EAAIG,OAASH,EAAII,ixCAYDJ,EAAIG,OAASH,EAAII,0XAO1BJ,EAAIK,gLAIJL,EAAIM,qRAORN,EAAIO,kPAMJP,EAAIQ,gBAAkBR,EAAIS,oQAM1B,EAAAnC,EAAAoC,2BAA0BV,EAAIW,YAC9B,kPAORX,EAAIY,UAAY,iLAKhBZ,EAAIR,+JAIJQ,EAAIR,oJAjE1B,IAA+BQ,GAtD7B,EAAAa,EAAAC,uBAAsBb,GAGFtB,SAAXoC,cAAc,gBAAgBlD,iBAAiB,SAAS,KAC/D,IAAImD,EAAoB,GACxB,MAAMC,EAAIvB,aAAaC,QAAQ,WAC3BsB,IACFD,EAAoBnB,KAAKC,MAAMmB,IAIbD,EAAkBjB,MAAKmB,GAAOA,EAAI1B,IAAMF,KAExD,EAAAvB,EAAAoD,eAAcvB,IACd,EAAA7B,EAAAqD,wBAAuBxB,IAC3B,EAAAyB,EAAAC,cAAahC,EAAU,IAGzBX,SAASoC,cAAc,cAAclD,iBAAiB,SAAS,KAC7D,IAAI0D,EAAkB,GACtB,MAAMC,EAAI9B,aAAaC,QAAQ,SAC3B6B,IACFD,EAAkB1B,KAAKC,MAAM0B,IAIXD,EAAgBxB,MAAKmB,GAAOA,EAAI1B,IAAMF,KAEtD,EAAAvB,EAAA0D,aAAY7B,IACZ,EAAA7B,EAAA2D,sBAAqB9B,IACzB,EAAAyB,EAAAC,cAAahC,EAAU,KAGzB,EAAA+B,EAAAC,cAAahC,E,IA1Df7B,EAAAE,KAAKgE,cAAc9D,iBAAiB,QAASU,GAC7Cd,EAAAE,KAAKiE,kBAAkB/D,iBAAiB,SAwExC,SAAkCC,GAC5BA,EAAE+D,gBAAkB/D,EAAEqB,QACxBZ,G","sources":["src/js/library-header-btns.js","src/js/api/loadModalCardLibrary.js"],"sourcesContent":["import { refs } from './refs';\nimport { getWatchedFilms, getQueueFilms } from './local_storage';\nimport { createPagination } from './pagination-library';\n\nrefs.btnWatched.addEventListener('click', onBtnWatchedClick);\nrefs.btnQueue.addEventListener('click', onBtnQueueClick);\n\ngetWatchedFilms();\n\nfunction onBtnWatchedClick(e) {\n  getWatchedFilms();\n  // createPagination('watched');\n\n  refs.btnWatched.style.backgroundColor = 'var(--button-bg-cl)';\n  refs.btnWatched.style.borderColor = 'var(--button-bg-cl)';\n  refs.btnQueue.style.backgroundColor = 'transparent';\n  refs.btnQueue.style.borderColor = 'var(--header-text-cl)';\n}\n\nfunction onBtnQueueClick(e) {\n  getQueueFilms();\n  // createPagination('queue');\n\n  refs.btnQueue.style.backgroundColor = 'var(--button-bg-cl)';\n  refs.btnQueue.style.borderColor = 'var(--button-bg-cl)';\n  refs.btnWatched.style.backgroundColor = 'transparent';\n  refs.btnWatched.style.borderColor = 'var(--header-text-cl)';\n}\n","import { gettingGenresListForModal } from './gettingGenresList';\nimport makingMarkup from '../api/render-card-markup';\n// import MoviesApiService from './moviesApiServiceClass';\nimport { refs } from '../refs';\nimport { insertModalMarkupHome } from './insertingIntoDifferentContainers';\nimport {\n  addWatchedLocalStorage,\n  addQueueLocalStorage,\n  deleteQueue,\n  deleteWatched,\n} from '../local_storage';\nimport { textModalBtn } from '../modal-btns';\n// const moviesApiService = new MoviesApiService();\n\nrefs.libraryCardsContainer.addEventListener('click', clickOnMovie);\nrefs.closeModalBtn.addEventListener('click', onCloseModalBtnClick);\nrefs.modalCardBackdrop.addEventListener('click', onModalCardBackdropClick);\n\nfunction clickOnMovie(e) {\n  if (\n    e.target.nodeName !== 'IMG' &&\n    e.target.nodeName !== 'DIV' &&\n    e.target.nodeName !== 'B' &&\n    e.target.nodeName !== 'H2' &&\n    e.target.nodeName !== 'P'\n  ) {\n    return;\n  }\n\n  document.body.classList.add('show-modal');\n  window.addEventListener('keydown', modalCloseByEsc);\n\n  const currentId = e.target.dataset.id;\n  const unParsedCurrentArrayFilms = localStorage.getItem('currentFilm');\n  const parsedCurrentArrayFilms = JSON.parse(unParsedCurrentArrayFilms);\n\n  // console.log(parsedCurrentArrayFilms.find(obj => obj.id == currentId));\n  let currentMovie = parsedCurrentArrayFilms.find(obj => obj.id == currentId);\n\n  const render = makingModalCardMarkup(currentMovie);\n  insertModalMarkupHome(render);\n  ///////////////////////////////////////////////////////////////////////////\n  //** Код для запису об'єктів в LOCAL STORAGE */\n  document.querySelector('#watched-btn').addEventListener('click', () => {\n    let arrayFilmsWatched = [];\n    const w = localStorage.getItem('watched');\n    if (w) {\n      arrayFilmsWatched = JSON.parse(w);\n    }\n\n    // Перевірка на наявність об'єкта в масиві фільмів \"WATCHED\"\n    const isAddedFilm = arrayFilmsWatched.find(arr => arr.id == currentId);\n    isAddedFilm\n      ? deleteWatched(currentMovie)\n      : addWatchedLocalStorage(currentMovie);\n    textModalBtn(currentId);\n  });\n\n  document.querySelector('#queue-btn').addEventListener('click', () => {\n    let arrayFilmsQueue = [];\n    const q = localStorage.getItem('queue');\n    if (q) {\n      arrayFilmsQueue = JSON.parse(q);\n    }\n\n    // Перевірка на наявність об'єкта в масиві фільмів \"QUEUE\"\n    const isAddedFilm = arrayFilmsQueue.find(arr => arr.id == currentId);\n    isAddedFilm\n      ? deleteQueue(currentMovie)\n      : addQueueLocalStorage(currentMovie);\n    textModalBtn(currentId);\n  });\n  /////////////////////////////////////////////////////////////////////////////\n  textModalBtn(currentId);\n}\n\nfunction onCloseModalBtnClick() {\n  window.removeEventListener('keydown', modalCloseByEsc);\n  document.body.classList.remove('show-modal');\n  refs.modalCardContainer.innerHTML = '';\n}\n\nfunction modalCloseByEsc(e) {\n  if (e.code === 'Escape') {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction onModalCardBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    onCloseModalBtnClick();\n  }\n}\n\nfunction makingModalCardMarkup(obj) {\n  const markup = `<div class=\"movie__container--left-side\">              \n                  <img class=\"movie__image\" src=\"https://www.themoviedb.org/t/p/w500${\n                    obj.poster_path ||\n                    `https://raw.githubusercontent.com/marvall/filmoteka/main/src/images/no-poster.png`\n                  }\"\n                    alt=\"${obj.title || obj.name}\" />\n\n                    <button type=\"button\" class=\"movie__btn-trailer\">\n                        <svg width='100' height='60' class='youtube-icon' viewBox='0 -77 512.00213 512'>\n                            <path\n                                d='m501.453125 56.09375c-5.902344-21.933594-23.195313-39.222656-45.125-45.128906-40.066406-10.964844-200.332031-10.964844-200.332031-10.964844s-160.261719 0-200.328125 10.546875c-21.507813 5.902344-39.222657 23.617187-45.125 45.546875-10.542969 40.0625-10.542969 123.148438-10.542969 123.148438s0 83.503906 10.542969 123.148437c5.90625 21.929687 23.195312 39.222656 45.128906 45.128906 40.484375 10.964844 200.328125 10.964844 200.328125 10.964844s160.261719 0 200.328125-10.546875c21.933594-5.902344 39.222656-23.195312 45.128906-45.125 10.542969-40.066406 10.542969-123.148438 10.542969-123.148438s.421875-83.507812-10.546875-123.570312zm0 0'\n                                fill='#f00'></path>\n                            <path d='m204.96875 256 133.269531-76.757812-133.269531-76.757813zm0 0' fill='#fff'></path>\n                        </svg>                      \n                    </button>                \n            </div>\n            <div class=\"movie__container--rigth-side\">\n                <h2 class=\"movie__title\">${obj.title || obj.name}</h2>\n                <table class=\"movie__info\">\n                    <tbody>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Vote / Votes</td>\n                            <td class=\"movie__info-rating\">\n                                <span class=\"movie__info-rating-value movie__info-rating--accent\">${\n                                  obj.vote_average\n                                }</span>\n                                <span class=\"movie__info-rating-slash\">/</span>\n                                <span class=\"movie__info-rating-value\">${\n                                  obj.vote_count\n                                }</span>\n                            </td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Popularity</td>\n                            <td class=\"movie__info-numbers\">${\n                              obj.popularity\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows\">\n                            <td class=\"movie__info-name\">Original Title</td>\n                            <td class=\"movie__info-value\">${\n                              obj.original_title || obj.original_name\n                            }</td>\n                        </tr>\n                        <tr class=\"movie__info-rows movie__info-rows--last\">\n                            <td class=\"movie__info-name\">Genre</td>\n                            <td class=\"movie__info-value\">${\n                              gettingGenresListForModal(obj.genre_ids) ||\n                              'Genre not defined'\n                            }</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h2 class=\"movie__about-title\">About</h2>\n                <p class=\"movie__about-text\">\n                    ${obj.overview || 'No text'}\n                </p>\n                <div class=\"movie__btn-container\">\n                   \n                    <button type=\"submit\" id=\"watched-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn--accent\">ADD TO WATCHED\n                        </button>\n                    <button type=\"submit\" id=\"queue-btn\" data-id=\"${\n                      obj.id\n                    }\" class=\"movie__btn btn btn-queue\">ADD TO QUEUE\n                        </button>\n                </div>\n            </div>\n        </div>`;\n  return markup;\n}\n\nexport { makingModalCardMarkup };\n"],"names":["$krGWQ","parcelRequire","refs","btnWatched","addEventListener","e","$fnyLm","getWatchedFilms","style","backgroundColor","borderColor","btnQueue","getQueueFilms","$1drNe","$ebdeb9d781fb2b98$var$onCloseModalBtnClick","window","removeEventListener","$ebdeb9d781fb2b98$var$modalCloseByEsc","document","body","classList","remove","modalCardContainer","innerHTML","code","libraryCardsContainer","target","nodeName","add","currentId","dataset","id","unParsedCurrentArrayFilms","localStorage","getItem","currentMovie","JSON","parse","find","obj","render","poster_path","title","name","vote_average","vote_count","popularity","original_title","original_name","gettingGenresListForModal","genre_ids","overview","$7x8k5","insertModalMarkupHome","querySelector","arrayFilmsWatched","w","arr","deleteWatched","addWatchedLocalStorage","$kYzA7","textModalBtn","arrayFilmsQueue","q","deleteQueue","addQueueLocalStorage","closeModalBtn","modalCardBackdrop","currentTarget"],"version":3,"file":"library.fcb94bd0.js.map"}